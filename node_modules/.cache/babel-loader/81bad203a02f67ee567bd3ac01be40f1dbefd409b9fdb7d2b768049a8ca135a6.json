{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/project/remora/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/project/remora/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/project/remora/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/project/remora/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WeakSetPredicate = void 0;\nvar has_items_1 = require(\"../utils/has-items\");\nvar predicate_1 = require(\"./predicate\");\nvar WeakSetPredicate = /*#__PURE__*/function (_predicate_1$Predicat) {\n  _inherits(WeakSetPredicate, _predicate_1$Predicat);\n  var _super = _createSuper(WeakSetPredicate);\n  /**\n  @hidden\n  */\n  function WeakSetPredicate(options) {\n    _classCallCheck(this, WeakSetPredicate);\n    return _super.call(this, 'WeakSet', options);\n  }\n  /**\n  Test a WeakSet to include all the provided items. The items are tested by identity, not structure.\n   @param items - The items that should be a item in the WeakSet.\n  */\n  _createClass(WeakSetPredicate, [{\n    key: \"has\",\n    value: function has() {\n      for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n        items[_key] = arguments[_key];\n      }\n      return this.addValidator({\n        message: function message(_, label, missingItems) {\n          return \"Expected \".concat(label, \" to have items `\").concat(JSON.stringify(missingItems), \"`\");\n        },\n        validator: function validator(set) {\n          return has_items_1.default(set, items);\n        }\n      });\n    }\n    /**\n    Test a WeakSet to include any of the provided items. The items are tested by identity, not structure.\n     @param items - The items that could be a item in the WeakSet.\n    */\n  }, {\n    key: \"hasAny\",\n    value: function hasAny() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n      return this.addValidator({\n        message: function message(_, label) {\n          return \"Expected \".concat(label, \" to have any item of `\").concat(JSON.stringify(items), \"`\");\n        },\n        validator: function validator(set) {\n          return items.some(function (item) {\n            return set.has(item);\n          });\n        }\n      });\n    }\n  }]);\n  return WeakSetPredicate;\n}(predicate_1.Predicate);\nexports.WeakSetPredicate = WeakSetPredicate;","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","_inherits","_createSuper","Object","defineProperty","exports","value","WeakSetPredicate","has_items_1","predicate_1","_predicate_1$Predicat","_super","options","call","key","has","_len","arguments","length","items","Array","_key","addValidator","message","_","label","missingItems","concat","JSON","stringify","validator","set","hasAny","_len2","_key2","some","item","Predicate"],"sources":["/project/remora/node_modules/ow/dist/predicates/weak-set.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeakSetPredicate = void 0;\nconst has_items_1 = require(\"../utils/has-items\");\nconst predicate_1 = require(\"./predicate\");\nclass WeakSetPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('WeakSet', options);\n    }\n    /**\n    Test a WeakSet to include all the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that should be a item in the WeakSet.\n    */\n    has(...items) {\n        return this.addValidator({\n            message: (_, label, missingItems) => `Expected ${label} to have items \\`${JSON.stringify(missingItems)}\\``,\n            validator: set => has_items_1.default(set, items)\n        });\n    }\n    /**\n    Test a WeakSet to include any of the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that could be a item in the WeakSet.\n    */\n    hasAny(...items) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any item of \\`${JSON.stringify(items)}\\``,\n            validator: set => items.some(item => set.has(item))\n        });\n    }\n}\nexports.WeakSetPredicate = WeakSetPredicate;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,eAAA,GAAAC,OAAA,0EAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAF,OAAA,uEAAAC,OAAA;AAAA,IAAAE,SAAA,GAAAH,OAAA,oEAAAC,OAAA;AAAA,IAAAG,YAAA,GAAAJ,OAAA,uEAAAC,OAAA;AACbI,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,gBAAgB,GAAG,KAAK,CAAC;AACjC,IAAMC,WAAW,GAAGV,OAAO,CAAC,oBAAoB,CAAC;AACjD,IAAMW,WAAW,GAAGX,OAAO,CAAC,aAAa,CAAC;AAAC,IACrCS,gBAAgB,0BAAAG,qBAAA;EAAAT,SAAA,CAAAM,gBAAA,EAAAG,qBAAA;EAAA,IAAAC,MAAA,GAAAT,YAAA,CAAAK,gBAAA;EAClB;AACJ;AACA;EACI,SAAAA,iBAAYK,OAAO,EAAE;IAAAf,eAAA,OAAAU,gBAAA;IAAA,OAAAI,MAAA,CAAAE,IAAA,OACX,SAAS,EAAED,OAAO;EAC5B;EACA;AACJ;AACA;AACA;EAHIZ,YAAA,CAAAO,gBAAA;IAAAO,GAAA;IAAAR,KAAA,EAKA,SAAAS,IAAA,EAAc;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAPC,KAAK,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAALF,KAAK,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MACR,OAAO,IAAI,CAACC,YAAY,CAAC;QACrBC,OAAO,EAAE,SAAAA,QAACC,CAAC,EAAEC,KAAK,EAAEC,YAAY;UAAA,mBAAAC,MAAA,CAAiBF,KAAK,sBAAAE,MAAA,CAAoBC,IAAI,CAACC,SAAS,CAACH,YAAY,CAAC;QAAA,CAAI;QAC1GI,SAAS,EAAE,SAAAA,UAAAC,GAAG;UAAA,OAAIvB,WAAW,CAACT,OAAO,CAACgC,GAAG,EAAEZ,KAAK,CAAC;QAAA;MACrD,CAAC,CAAC;IACN;IACA;AACJ;AACA;AACA;EAHI;IAAAL,GAAA;IAAAR,KAAA,EAKA,SAAA0B,OAAA,EAAiB;MAAA,SAAAC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,EAAPC,KAAK,OAAAC,KAAA,CAAAa,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAALf,KAAK,CAAAe,KAAA,IAAAjB,SAAA,CAAAiB,KAAA;MAAA;MACX,OAAO,IAAI,CAACZ,YAAY,CAAC;QACrBC,OAAO,EAAE,SAAAA,QAACC,CAAC,EAAEC,KAAK;UAAA,mBAAAE,MAAA,CAAiBF,KAAK,4BAAAE,MAAA,CAA0BC,IAAI,CAACC,SAAS,CAACV,KAAK,CAAC;QAAA,CAAI;QAC3FW,SAAS,EAAE,SAAAA,UAAAC,GAAG;UAAA,OAAIZ,KAAK,CAACgB,IAAI,CAAC,UAAAC,IAAI;YAAA,OAAIL,GAAG,CAAChB,GAAG,CAACqB,IAAI,CAAC;UAAA,EAAC;QAAA;MACvD,CAAC,CAAC;IACN;EAAC;EAAA,OAAA7B,gBAAA;AAAA,EA5B0BE,WAAW,CAAC4B,SAAS;AA8BpDhC,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}