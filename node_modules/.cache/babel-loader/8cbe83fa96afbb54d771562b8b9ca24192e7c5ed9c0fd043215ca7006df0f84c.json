{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/project/remora/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/project/remora/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/project/remora/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/project/remora/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WeakMapPredicate = void 0;\nvar has_items_1 = require(\"../utils/has-items\");\nvar predicate_1 = require(\"./predicate\");\nvar WeakMapPredicate = /*#__PURE__*/function (_predicate_1$Predicat) {\n  _inherits(WeakMapPredicate, _predicate_1$Predicat);\n  var _super = _createSuper(WeakMapPredicate);\n  /**\n  @hidden\n  */\n  function WeakMapPredicate(options) {\n    _classCallCheck(this, WeakMapPredicate);\n    return _super.call(this, 'WeakMap', options);\n  }\n  /**\n  Test a WeakMap to include all the provided keys. The keys are tested by identity, not structure.\n   @param keys - The keys that should be a key in the WeakMap.\n  */\n  _createClass(WeakMapPredicate, [{\n    key: \"hasKeys\",\n    value: function hasKeys() {\n      for (var _len = arguments.length, keys = new Array(_len), _key = 0; _key < _len; _key++) {\n        keys[_key] = arguments[_key];\n      }\n      return this.addValidator({\n        message: function message(_, label, missingKeys) {\n          return \"Expected \".concat(label, \" to have keys `\").concat(JSON.stringify(missingKeys), \"`\");\n        },\n        validator: function validator(map) {\n          return has_items_1.default(map, keys);\n        }\n      });\n    }\n    /**\n    Test a WeakMap to include any of the provided keys. The keys are tested by identity, not structure.\n     @param keys - The keys that could be a key in the WeakMap.\n    */\n  }, {\n    key: \"hasAnyKeys\",\n    value: function hasAnyKeys() {\n      for (var _len2 = arguments.length, keys = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        keys[_key2] = arguments[_key2];\n      }\n      return this.addValidator({\n        message: function message(_, label) {\n          return \"Expected \".concat(label, \" to have any key of `\").concat(JSON.stringify(keys), \"`\");\n        },\n        validator: function validator(map) {\n          return keys.some(function (key) {\n            return map.has(key);\n          });\n        }\n      });\n    }\n  }]);\n  return WeakMapPredicate;\n}(predicate_1.Predicate);\nexports.WeakMapPredicate = WeakMapPredicate;","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","_inherits","_createSuper","Object","defineProperty","exports","value","WeakMapPredicate","has_items_1","predicate_1","_predicate_1$Predicat","_super","options","call","key","hasKeys","_len","arguments","length","keys","Array","_key","addValidator","message","_","label","missingKeys","concat","JSON","stringify","validator","map","hasAnyKeys","_len2","_key2","some","has","Predicate"],"sources":["/project/remora/node_modules/ow/dist/predicates/weak-map.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeakMapPredicate = void 0;\nconst has_items_1 = require(\"../utils/has-items\");\nconst predicate_1 = require(\"./predicate\");\nclass WeakMapPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('WeakMap', options);\n    }\n    /**\n    Test a WeakMap to include all the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that should be a key in the WeakMap.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label, missingKeys) => `Expected ${label} to have keys \\`${JSON.stringify(missingKeys)}\\``,\n            validator: map => has_items_1.default(map, keys)\n        });\n    }\n    /**\n    Test a WeakMap to include any of the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that could be a key in the WeakMap.\n    */\n    hasAnyKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any key of \\`${JSON.stringify(keys)}\\``,\n            validator: map => keys.some(key => map.has(key))\n        });\n    }\n}\nexports.WeakMapPredicate = WeakMapPredicate;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,eAAA,GAAAC,OAAA,0EAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAF,OAAA,uEAAAC,OAAA;AAAA,IAAAE,SAAA,GAAAH,OAAA,oEAAAC,OAAA;AAAA,IAAAG,YAAA,GAAAJ,OAAA,uEAAAC,OAAA;AACbI,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,gBAAgB,GAAG,KAAK,CAAC;AACjC,IAAMC,WAAW,GAAGV,OAAO,CAAC,oBAAoB,CAAC;AACjD,IAAMW,WAAW,GAAGX,OAAO,CAAC,aAAa,CAAC;AAAC,IACrCS,gBAAgB,0BAAAG,qBAAA;EAAAT,SAAA,CAAAM,gBAAA,EAAAG,qBAAA;EAAA,IAAAC,MAAA,GAAAT,YAAA,CAAAK,gBAAA;EAClB;AACJ;AACA;EACI,SAAAA,iBAAYK,OAAO,EAAE;IAAAf,eAAA,OAAAU,gBAAA;IAAA,OAAAI,MAAA,CAAAE,IAAA,OACX,SAAS,EAAED,OAAO;EAC5B;EACA;AACJ;AACA;AACA;EAHIZ,YAAA,CAAAO,gBAAA;IAAAO,GAAA;IAAAR,KAAA,EAKA,SAAAS,QAAA,EAAiB;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MACX,OAAO,IAAI,CAACC,YAAY,CAAC;QACrBC,OAAO,EAAE,SAAAA,QAACC,CAAC,EAAEC,KAAK,EAAEC,WAAW;UAAA,mBAAAC,MAAA,CAAiBF,KAAK,qBAAAE,MAAA,CAAmBC,IAAI,CAACC,SAAS,CAACH,WAAW,CAAC;QAAA,CAAI;QACvGI,SAAS,EAAE,SAAAA,UAAAC,GAAG;UAAA,OAAIvB,WAAW,CAACT,OAAO,CAACgC,GAAG,EAAEZ,IAAI,CAAC;QAAA;MACpD,CAAC,CAAC;IACN;IACA;AACJ;AACA;AACA;EAHI;IAAAL,GAAA;IAAAR,KAAA,EAKA,SAAA0B,WAAA,EAAoB;MAAA,SAAAC,KAAA,GAAAhB,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAa,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJf,IAAI,CAAAe,KAAA,IAAAjB,SAAA,CAAAiB,KAAA;MAAA;MACd,OAAO,IAAI,CAACZ,YAAY,CAAC;QACrBC,OAAO,EAAE,SAAAA,QAACC,CAAC,EAAEC,KAAK;UAAA,mBAAAE,MAAA,CAAiBF,KAAK,2BAAAE,MAAA,CAAyBC,IAAI,CAACC,SAAS,CAACV,IAAI,CAAC;QAAA,CAAI;QACzFW,SAAS,EAAE,SAAAA,UAAAC,GAAG;UAAA,OAAIZ,IAAI,CAACgB,IAAI,CAAC,UAAArB,GAAG;YAAA,OAAIiB,GAAG,CAACK,GAAG,CAACtB,GAAG,CAAC;UAAA,EAAC;QAAA;MACpD,CAAC,CAAC;IACN;EAAC;EAAA,OAAAP,gBAAA;AAAA,EA5B0BE,WAAW,CAAC4B,SAAS;AA8BpDhC,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}