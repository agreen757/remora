{"ast":null,"code":"import _regeneratorRuntime from \"/project/remora/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/project/remora/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/project/remora/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/project/remora/src/index.js\",\n  _s = $RefreshSig$();\n/**\n * TDD\n *\n * Convert input to form with submit button\n *\n * Test\n *\n * Later you will have to decide how to display the results\n * and how to filter\n *\n *\n *\n */\nimport \"./styles.css\";\nimport * as React from \"react\";\nimport { useRef, useEffect } from \"react\";\nimport * as ReactDOMClient from \"react-dom/client\";\nimport { Box, ChakraProvider, Input, Text, Stack, Container, Button, HStack, useColorMode } from \"@chakra-ui/react\";\nimport { Waveform } from \"@uiball/loaders\";\nimport { Image as IMG } from \"@chakra-ui/react\";\nimport { APIFY_TOKEN } from \"./config\";\n//import Search from \"./components/search\";\nimport Search from './components/search';\n//import Locations from './components/locations'\nimport LocationsList from './components/locations';\n//import PostList from components/igposts\nimport PostList from './components/igposts';\nimport theme from \"./theme/theme\";\n//react router stuff\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { BrowserHistory, Router, Route, Routes } from 'react-router';\nimport { Link as RouteLink } from 'react-router-dom';\nimport CreateCampaign from './pages/create_campaign.js';\nimport Campaign from \"./pages/campaign\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var ApifyClient = require(\"apify-client\");\n  var _useColorMode = useColorMode(),\n    colorMode = _useColorMode.colorMode,\n    toggleColorMode = _useColorMode.toggleColorMode;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    searching = _React$useState2[0],\n    setSearching = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    searchValue = _React$useState4[0],\n    setSearchValue = _React$useState4[1];\n  var _React$useState5 = React.useState(5),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    resultsValue = _React$useState6[0],\n    setResultsValue = _React$useState6[1];\n  var _React$useState7 = React.useState([]),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    locations = _React$useState8[0],\n    setLocations = _React$useState8[1];\n  var _React$useState9 = React.useState(null),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    campaignName = _React$useState10[0],\n    setCampaignName = _React$useState10[1];\n  var _React$useState11 = React.useState(null),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    selectedLocation = _React$useState12[0],\n    setSelectedLocation = _React$useState12[1];\n  var _React$useState13 = React.useState([]),\n    _React$useState14 = _slicedToArray(_React$useState13, 2),\n    posts = _React$useState14[0],\n    setPosts = _React$useState14[1];\n  var handleChange = function handleChange(event) {\n    return setSearchValue(event.target.value);\n  };\n  var handleResultsChange = function handleResultsChange(event) {\n    return setResultsValue(event.target.value);\n  };\n  var handleCheckboxChange = function handleCheckboxChange(event) {\n    return setSelectedLocation(event.target.value ? event.target.value : null);\n  };\n  var handleCampaignName = function handleCampaignName(event) {\n    setCampaignName(event.target.value);\n  };\n  var canvasRef = useRef();\n  var apifyClient = new ApifyClient({\n    token: APIFY_TOKEN\n  });\n  useEffect(function () {\n    if (colorMode === 'light') {\n      toggleColorMode();\n    }\n  }, []);\n  var image_preloader = function image_preloader(src) {\n    return new Promise(function (resolve, reject) {\n      var img = new Image();\n      //add cross origin same origin policy\n      img.crossOrigin = \"Anonymous\";\n      img.onload = function () {\n        return resolve(img);\n      };\n      //if an error occurs, return null\n      img.onerror = function () {\n        return resolve(null);\n      };\n      img.src = src;\n    });\n  };\n  var startCampaign = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n      var location, client, input, run, _yield$client$dataset, items;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            //get selectedLocation\n            location = selectedLocation;\n            client = new ApifyClient({\n              token: APIFY_TOKEN\n            });\n            setSearching(true);\n            //create input for Apify task\n            input = {\n              input: {\n                directUrls: [location],\n                resultsLimit: 200,\n                resultsType: \"posts\",\n                searchLimit: 2,\n                extendOutputFunction: \"\",\n                extendScraperFunction: \"\",\n                customData: {},\n                proxy: {\n                  useApifyProxy: true,\n                  apifyProxyGroups: [\"RESIDENTIAL\"]\n                }\n              }\n            };\n            /*let dsetid = 'GOTL6eBOUUfGKUlD6';\n            const { items } = await client\n                    .dataset(dsetid)\n                    .listItems();*/\n            _context.next = 6;\n            return client.actor(\"zmxouNS7LxOt2UPUD\").call(input);\n          case 6:\n            run = _context.sent;\n            _context.next = 9;\n            return client.dataset(run.defaultDatasetId).listItems();\n          case 9:\n            _yield$client$dataset = _context.sent;\n            items = _yield$client$dataset.items;\n            console.log(items);\n            setPosts(items[0].posts);\n            setSearching(false);\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function startCampaign(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  //create campaign in dataset\n  var initCampaign = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event) {\n      var dsetid, location, input, dset;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            //write the campaign info to the remora-campaigns Dataset\n            dsetid = '8sb4rKyopvdkVZE2o';\n            location = selectedLocation;\n            console.log(campaignName);\n            input = {\n              campaign_name: campaignName,\n              location: location,\n              created: new Date()\n            };\n            dset = apifyClient.dataset(dsetid);\n            setSearching(true);\n            _context2.next = 8;\n            return dset.pushItems(input);\n          case 8:\n            //await apifyClient.dataset(dsetid).update(input)\n            console.log('updated dataset');\n            setTimeout(function () {\n              setSearching(false);\n            }, 2000);\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function initCampaign(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var searchloc = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(event) {\n      var str, resultsnum, client, input, run, dsetid, _yield$client$dataset2, items, i, item, img, fakeobj;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            str = searchValue;\n            resultsnum = resultsValue; //get search\n            //if str is greater than five charachters, perform search\n            if (!(str.length > 5 && !searching)) {\n              _context3.next = 30;\n              break;\n            }\n            //make input to update apify task\n            client = new ApifyClient({\n              token: APIFY_TOKEN\n            });\n            setSearching(true);\n            input = {\n              id: \"ZxLNxrRaZrSjuhT9g\",\n              userId: \"NcyiXxWFYmss6ZhEy\",\n              actId: \"OtzYfK1ndEGdwWFKQ\",\n              createdAt: \"2023-07-06T22:47:00.061Z\",\n              modifiedAt: \"2023-07-07T00:09:52.779Z\",\n              removedAt: null,\n              stats: {\n                totalRuns: 15\n              },\n              input: {\n                resultsLimit: parseInt(resultsnum),\n                resultsType: \"details\",\n                search: str,\n                searchLimit: 2,\n                searchType: \"place\",\n                extendOutputFunction: \"\",\n                extendScraperFunction: \"\",\n                customData: {},\n                proxy: {\n                  useApifyProxy: true,\n                  apifyProxyGroups: [\"RESIDENTIAL\"]\n                }\n              }\n            };\n            console.log(input);\n            _context3.next = 9;\n            return client.task(\"VhplsklxGahw7MqYX\").update(input);\n          case 9:\n            run = _context3.sent;\n            console.log(\"updated task to find loc\");\n            dsetid = 'wPXQ0J4fWAq9WDNSp';\n            _context3.next = 14;\n            return client.dataset(dsetid).listItems();\n          case 14:\n            _yield$client$dataset2 = _context3.sent;\n            items = _yield$client$dataset2.items;\n            console.log(items);\n            i = 0;\n          case 18:\n            if (!(i < items.length)) {\n              _context3.next = 27;\n              break;\n            }\n            item = items[i];\n            _context3.next = 22;\n            return image_preloader(item.topPosts[0].image_versions2.candidates[0].url);\n          case 22:\n            img = _context3.sent;\n            //if the image loads, set the image\n            if (img) item.img = img;else\n              //remove the item from the list\n              items.splice(i, 1);\n          case 24:\n            i++;\n            _context3.next = 18;\n            break;\n          case 27:\n            setLocations(items);\n            setSearching(false);\n            //removing temporarily\n            /*await client\n              .task(\"VhplsklxGahw7MqYX\")\n              .call()\n              .then(async (run) => {\n                var defaultDatasetId = run.defaultDatasetId;\n                console.log(defaultDatasetId);\n                const { items } = await client\n                  .dataset(run.defaultDatasetId)\n                  .listItems();\n                console.log(items);\n                //use the image preloader to get images for each location\n                for (let i = 0; i < items.length; i++) {\n                  let item = items[i];\n                  let img = await image_preloader(item.topPosts[0].image_versions2.candidates[0].url);\n                  //if the image loads, set the image\n                  if (img)\n                    item.img = img;\n                  else\n                    //remove the item from the list\n                    items.splice(i, 1);\n                }\n            \n                 setLocations(items);\n                 //items will be in format\n                 setSearching(false);\n              });*/\n            //console.log(items);\n            fakeobj = [{\n              name: \"Harbor Park\"\n            }]; //setLocations(fakeobj)\n            /*await client.callTask(\"VhplsklxGahw7MqYX\").then(async (run) => {\n              console.log(run);\n              var defaultDatasetId = run.defaultDatasetId;\n              console.log(defaultDatasetId);\n              let ndataset = await Dataset.open(defaultDatasetId);\n              let ndatasetData = await ndataset.getData();\n              console.log(ndatasetData);\n               setSearching(false);\n            });*/\n          case 30:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function searchloc(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    bg: '#0b8dc1',\n    h: '100vh',\n    maxW: \"8xl\",\n    pt: '10px',\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      bg: 'black',\n      align: 'center',\n      spacing: \"14px\",\n      marginTop: '10px',\n      w: \"100%\",\n      h: \"80px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(CreateCampaign, {\n          handleCampaignName: handleCampaignName,\n          handleChange: handleChange,\n          searching: searching,\n          locations: locations,\n          handleCheckboxChange: handleCheckboxChange,\n          selectedLocation: selectedLocation,\n          searchloc: searchloc,\n          setCampaignName: setCampaignName,\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/campaign\",\n        element: /*#__PURE__*/_jsxDEV(Campaign, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lnzgBQ92XEmu1lsZPLZyZYccuN0=\", false, function () {\n  return [useColorMode];\n});\n_c = App;\nvar rootElement = document.getElementById(\"root\");\nvar root = ReactDOMClient.createRoot(rootElement);\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 299,\n  columnNumber: 3\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","ReactDOMClient","Box","ChakraProvider","Input","Text","Stack","Container","Button","HStack","useColorMode","Waveform","Image","IMG","APIFY_TOKEN","Search","LocationsList","PostList","theme","BrowserRouter","HashRouter","BrowserHistory","Router","Route","Routes","Link","RouteLink","CreateCampaign","Campaign","jsxDEV","_jsxDEV","App","_s","ApifyClient","require","_useColorMode","colorMode","toggleColorMode","_React$useState","useState","_React$useState2","_slicedToArray","searching","setSearching","_React$useState3","_React$useState4","searchValue","setSearchValue","_React$useState5","_React$useState6","resultsValue","setResultsValue","_React$useState7","_React$useState8","locations","setLocations","_React$useState9","_React$useState10","campaignName","setCampaignName","_React$useState11","_React$useState12","selectedLocation","setSelectedLocation","_React$useState13","_React$useState14","posts","setPosts","handleChange","event","target","value","handleResultsChange","handleCheckboxChange","handleCampaignName","canvasRef","apifyClient","token","image_preloader","src","Promise","resolve","reject","img","crossOrigin","onload","onerror","startCampaign","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","location","client","input","run","_yield$client$dataset","items","wrap","_callee$","_context","prev","next","directUrls","resultsLimit","resultsType","searchLimit","extendOutputFunction","extendScraperFunction","customData","proxy","useApifyProxy","apifyProxyGroups","actor","call","sent","dataset","defaultDatasetId","listItems","console","log","stop","_x","apply","arguments","initCampaign","_ref2","_callee2","dsetid","dset","_callee2$","_context2","campaign_name","created","Date","pushItems","setTimeout","_x2","searchloc","_ref3","_callee3","str","resultsnum","_yield$client$dataset2","i","item","fakeobj","_callee3$","_context3","length","id","userId","actId","createdAt","modifiedAt","removedAt","stats","totalRuns","parseInt","search","searchType","task","update","topPosts","image_versions2","candidates","url","splice","name","_x3","bg","h","maxW","pt","children","align","spacing","marginTop","w","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","_c","rootElement","document","getElementById","root","createRoot","render","StrictMode","$RefreshReg$"],"sources":["/project/remora/src/index.js"],"sourcesContent":["/**\n * TDD\n *\n * Convert input to form with submit button\n *\n * Test\n *\n * Later you will have to decide how to display the results\n * and how to filter\n *\n *\n *\n */\nimport \"./styles.css\";\nimport * as React from \"react\";\nimport { useRef, useEffect } from \"react\";\nimport * as ReactDOMClient from \"react-dom/client\";\nimport {\n  Box,\n  ChakraProvider,\n  Input,\n  Text,\n  Stack,\n  Container,\n  Button,\n  HStack,\n  useColorMode\n} from \"@chakra-ui/react\";\nimport { Waveform } from \"@uiball/loaders\";\nimport {Image as IMG} from \"@chakra-ui/react\"\nimport { APIFY_TOKEN } from \"./config\";\n //import Search from \"./components/search\";\n import Search from './components/search'\n //import Locations from './components/locations'\nimport LocationsList from './components/locations'\n//import PostList from components/igposts\nimport PostList from './components/igposts'\nimport theme from \"./theme/theme\";\n//react router stuff\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport {\n  BrowserHistory,\n  Router,\n  Route,\n  Routes,\n} from 'react-router';\nimport { Link as RouteLink } from 'react-router-dom';\nimport CreateCampaign from './pages/create_campaign.js'\nimport Campaign from \"./pages/campaign\";\n\nfunction App() {\n  const ApifyClient = require(\"apify-client\");\n  const { colorMode, toggleColorMode } = useColorMode();\n  const [searching, setSearching] = React.useState(false);\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [resultsValue, setResultsValue] = React.useState(5)\n  const [locations, setLocations] = React.useState([])\n  const [campaignName, setCampaignName] = React.useState(null)\n  const [selectedLocation, setSelectedLocation] = React.useState(null)\n  const [posts, setPosts] = React.useState([])\n  const handleChange = (event) => setSearchValue(event.target.value);\n  const handleResultsChange = (event) => setResultsValue(event.target.value);\n  const handleCheckboxChange = (event) => setSelectedLocation(event.target.value ? event.target.value : null);\n  const handleCampaignName = (event) => {\n    \n    setCampaignName(event.target.value);\n  }\n\n  const canvasRef = useRef();\n\n  const apifyClient = new ApifyClient({\n    token: APIFY_TOKEN\n  });\n \n\n  useEffect(() => {\n    if (colorMode === 'light') {\n      toggleColorMode()\n    }\n  }, []);\n\n  const image_preloader = (src) => {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      //add cross origin same origin policy\n      img.crossOrigin = \"Anonymous\";\n      img.onload = () => resolve(img);\n      //if an error occurs, return null\n      img.onerror = () => resolve(null);\n      img.src = src;\n    });\n  };\n  const startCampaign = async (event) => {\n    //get selectedLocation\n    let location = selectedLocation;\n    const client = new ApifyClient({\n      token: APIFY_TOKEN\n    });\n    setSearching(true);\n    //create input for Apify task\n    let input = {\n      input: {\n        directUrls: [\n          location\n        ],\n        resultsLimit: 200,\n        resultsType: \"posts\",\n        searchLimit: 2,\n        extendOutputFunction: \"\",\n        extendScraperFunction: \"\",\n        customData: {},\n        proxy: {\n          useApifyProxy: true,\n          apifyProxyGroups: [\"RESIDENTIAL\"]\n        }\n      }\n    };\n    /*let dsetid = 'GOTL6eBOUUfGKUlD6';\n    const { items } = await client\n            .dataset(dsetid)\n            .listItems();*/\n\n    let run = await client.actor(\"zmxouNS7LxOt2UPUD\").call(input);\n    const { items } = await client\n            .dataset(run.defaultDatasetId)\n            .listItems();\n    console.log(items);\n    setPosts(items[0].posts);\n    setSearching(false);\n    \n\n        \n\n  }\n  //create campaign in dataset\n  const initCampaign = async (event) => {\n    //write the campaign info to the remora-campaigns Dataset\n   \n    let dsetid = '8sb4rKyopvdkVZE2o';\n    let location = selectedLocation;\n    console.log(campaignName)\n    let input = {\n      campaign_name: campaignName,\n      location: location,\n      created: new Date()\n    }\n    let dset = apifyClient.dataset(dsetid);\n\n    setSearching(true);\n    await dset.pushItems(input);\n    //await apifyClient.dataset(dsetid).update(input)\n    console.log('updated dataset');\n    \n    setTimeout(function(){\n      setSearching(false);\n\n    },2000)\n\n  }\n\n\n\n\n  const searchloc = async (event) => {\n    let str = searchValue;\n    let resultsnum = resultsValue;\n    //get search\n\n    //if str is greater than five charachters, perform search\n    if (str.length > 5 && !searching) {\n      //make input to update apify task\n      const client = new ApifyClient({\n        token: APIFY_TOKEN\n      });\n\n      setSearching(true);\n\n      var input = {\n        id: \"ZxLNxrRaZrSjuhT9g\",\n        userId: \"NcyiXxWFYmss6ZhEy\",\n        actId: \"OtzYfK1ndEGdwWFKQ\",\n        createdAt: \"2023-07-06T22:47:00.061Z\",\n        modifiedAt: \"2023-07-07T00:09:52.779Z\",\n        removedAt: null,\n        stats: {\n          totalRuns: 15\n        },\n        input: {\n          resultsLimit: parseInt(resultsnum),\n          resultsType: \"details\",\n          search: str,\n          searchLimit: 2,\n          searchType: \"place\",\n          extendOutputFunction: \"\",\n          extendScraperFunction: \"\",\n          customData: {},\n          proxy: {\n            useApifyProxy: true,\n            apifyProxyGroups: [\"RESIDENTIAL\"]\n          }\n        }\n      };\n      console.log(input);\n      let run = await client.task(\"VhplsklxGahw7MqYX\").update(input);\n      console.log(\"updated task to find loc\");\n      let dsetid = 'wPXQ0J4fWAq9WDNSp';\n      const { items } = await client\n            .dataset(dsetid)\n            .listItems();\n      console.log(items);\n      for (let i = 0; i < items.length; i++) {\n        let item = items[i];\n        let img = await image_preloader(item.topPosts[0].image_versions2.candidates[0].url);\n        //if the image loads, set the image\n        if (img)\n          item.img = img;\n        else\n          //remove the item from the list\n          items.splice(i, 1);\n      }\n  \n\n      setLocations(items);\n      setSearching(false);\n      //removing temporarily\n      /*await client\n        .task(\"VhplsklxGahw7MqYX\")\n        .call()\n        .then(async (run) => {\n          var defaultDatasetId = run.defaultDatasetId;\n          console.log(defaultDatasetId);\n          const { items } = await client\n            .dataset(run.defaultDatasetId)\n            .listItems();\n          console.log(items);\n          //use the image preloader to get images for each location\n          for (let i = 0; i < items.length; i++) {\n            let item = items[i];\n            let img = await image_preloader(item.topPosts[0].image_versions2.candidates[0].url);\n            //if the image loads, set the image\n            if (img)\n              item.img = img;\n            else\n              //remove the item from the list\n              items.splice(i, 1);\n          }\n      \n\n          setLocations(items);\n\n          //items will be in format\n\n          setSearching(false);\n        });*/\n      //console.log(items);\n\n      let fakeobj = [{\n        name: \"Harbor Park\"\n      }]\n\n      //setLocations(fakeobj)\n      /*await client.callTask(\"VhplsklxGahw7MqYX\").then(async (run) => {\n        console.log(run);\n        var defaultDatasetId = run.defaultDatasetId;\n        console.log(defaultDatasetId);\n        let ndataset = await Dataset.open(defaultDatasetId);\n        let ndatasetData = await ndataset.getData();\n        console.log(ndatasetData);\n\n        setSearching(false);\n      });*/\n    }\n  };\n\n  return (\n    <Container bg={'#0b8dc1'} h={'100vh'} maxW='8xl' pt={'10px'}>\n       <HStack\n          bg={'black'}\n          align={'center'}\n          spacing=\"14px\"\n          marginTop={'10px'}\n          w=\"100%\"\n          h=\"80px\"\n        >\n        </HStack>\n      <Routes>\n        <Route exact path=\"/\" element={<CreateCampaign handleCampaignName={handleCampaignName} handleChange={handleChange} searching={searching} locations={locations} handleCheckboxChange={handleCheckboxChange} selectedLocation={selectedLocation} searchloc={searchloc} setCampaignName={setCampaignName} posts={posts} />} \n        />\n        <Route path=\"/campaign\" element={<Campaign />} />\n      </Routes>\n    </Container>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = ReactDOMClient.createRoot(rootElement);\n\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}