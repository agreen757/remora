{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/project/remora/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/project/remora/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _slicedToArray = require(\"/project/remora/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.traverseObject = exports.unescapePropertyName = exports.escapePropertyName = exports.buildOrVersionNumberIntToStr = exports.markedDecreaseHeadsLevel = exports.markedSetNofollowLinks = exports.normalizeUrl = exports.parseUrl = exports.getOrdinalSuffix = exports.truncate = exports.dateToString = exports.isNullOrUndefined = void 0;\n\n/*!\n * This module contains various client-side utility and helper functions.\n *\n * Author: Jan Curn (jan@apify.com)\n * Copyright(c) 2016 Apify. All rights reserved.\n *\n */\nvar _ = require('underscore');\nvar isBuffer = require('is-buffer');\nvar _require = require('countries-list'),\n  countries = _require.countries;\nvar consts = require('./consts');\nvar regex = require('./regexs');\nvar _require2 = require('./intl'),\n  m = _require2.m;\nvar _require3 = require('./input_schema'),\n  parseAjvError = _require3.parseAjvError;\nrequire('./polyfills');\n/**\n * Returns true if object equals null or undefined, otherwise returns false.\n * @param obj\n * @returns {boolean}\n */\n\nvar isNullOrUndefined = function isNullOrUndefined(obj) {\n  return obj === undefined || obj === null;\n};\n/**\n * Converts Date object to ISO string.\n * @param date\n * @param middleT\n * @returns {*}\n */\n\nexports.isNullOrUndefined = isNullOrUndefined;\nvar dateToString = function dateToString(date, middleT) {\n  if (!(date instanceof Date)) {\n    return '';\n  }\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1; // January is 0, February is 1, and so on.\n\n  var day = date.getDate();\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var seconds = date.getSeconds();\n  var millis = date.getMilliseconds();\n  return \"\".concat(year, \"-\").concat(month < 10 ? \"0\".concat(month) : month, \"-\").concat(day < 10 ? \"0\".concat(day) : day).concat(middleT ? 'T' : ' ').concat(hours < 10 ? \"0\".concat(hours) : hours, \":\").concat(minutes < 10 ? \"0\".concat(minutes) : minutes, \":\").concat(seconds < 10 ? \"0\".concat(seconds) : seconds, \".\").concat(millis < 10 ? \"00\".concat(millis) : millis < 100 ? \"0\".concat(millis) : millis); // eslint-disable-line no-nested-ternary\n};\n/**\n * Ensures a string is shorter than a specified number of character, and truncates it if not,\n * appending a specific suffix to it.\n * @param str\n * @param maxLength\n * @param suffix Suffix to be appended to truncated string. If null or undefined, it defaults to \"...[truncated]\".\n */\n\nexports.dateToString = dateToString;\nvar truncate = function truncate(str, maxLength, suffix) {\n  maxLength |= 0; // eslint-disable-line no-bitwise\n\n  if (typeof suffix !== 'string') {\n    suffix = '...[truncated]';\n  } // TODO: we should just ignore rest of the suffix...\n\n  if (suffix.length > maxLength) {\n    throw new Error('suffix string cannot be longer than maxLength');\n  }\n  if (typeof str === 'string' && str.length > maxLength) {\n    str = str.substr(0, maxLength - suffix.length) + suffix;\n  }\n  return str;\n};\n/**\n * Gets ordinal suffix for a number (e.g. \"nd\" for 2).\n */\n\nexports.truncate = truncate;\nvar getOrdinalSuffix = function getOrdinalSuffix(num) {\n  // code from https://ecommerce.shopify.com/c/ecommerce-design/t/ordinal-number-in-javascript-1st-2nd-3rd-4th-29259\n  var s = ['th', 'st', 'nd', 'rd'];\n  var v = num % 100;\n  return s[(v - 20) % 10] || s[v] || s[0];\n};\nexports.getOrdinalSuffix = getOrdinalSuffix;\nvar parseUrl = function parseUrl(str) {\n  if (typeof str !== 'string') {\n    return {};\n  }\n  var o = {\n    strictMode: false,\n    key: ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'fragment'],\n    q: {\n      name: 'queryKey',\n      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n      strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n      // eslint-disable-line max-len,no-useless-escape\n      loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/ // eslint-disable-line max-len,no-useless-escape\n    }\n  };\n\n  var m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str); // eslint-disable-line no-shadow\n\n  var uri = {};\n  var i = o.key.length;\n  while (i--) uri[o.key[i]] = m[i] || '';\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) uri[o.q.name][$1] = $2;\n  }); // our extension - parse fragment using a query string format (i.e. \"#key1=val1&key2=val2\")\n  // this format is used by many websites\n\n  uri.fragmentKey = {};\n  if (uri.fragment) {\n    uri.fragment.replace(o.q.parser, function ($0, $1, $2) {\n      if ($1) uri.fragmentKey[$1] = $2;\n    });\n  }\n  return uri;\n};\nexports.parseUrl = parseUrl;\nvar normalizeUrl = function normalizeUrl(url, keepFragment) {\n  if (typeof url !== 'string' || !url.length) {\n    return null;\n  }\n  var urlObj = parseUrl(url.trim());\n  if (!urlObj.protocol || !urlObj.host) {\n    return null;\n  }\n  var path = urlObj.path.replace(/\\/$/, '');\n  var params = urlObj.query ? urlObj.query.split('&').filter(function (param) {\n    return !/^utm_/.test(param);\n  }).sort() : [];\n  return \"\".concat(urlObj.protocol.trim().toLowerCase(), \"://\").concat(urlObj.host.trim().toLowerCase()).concat(path.trim()).concat(params.length ? \"?\".concat(params.join('&').trim()) : '').concat(keepFragment && urlObj.fragment ? \"#\".concat(urlObj.fragment.trim()) : '');\n}; // Helper function for markdown rendered marked\n// Renders links outside apify.com in readme with rel=\"noopener noreferrer nofollow\" and target=\"_blank\" attributes\n\nexports.normalizeUrl = normalizeUrl;\nvar markedSetNofollowLinks = function markedSetNofollowLinks(href, title, text) {\n  var urlParsed;\n  try {\n    urlParsed = URL.parse(href);\n  } catch (e) {// Probably invalid url, go on\n  }\n  var isApifyLink = urlParsed && /(\\.|^)apify\\.com$/i.test(urlParsed.hostname);\n  return isApifyLink ? \"<a href=\\\"\".concat(href, \"\\\">\").concat(title || text, \"</a>\") : \"<a rel=\\\"noopener noreferrer nofollow\\\" target=\\\"_blank\\\" href=\\\"\".concat(href, \"\\\">\").concat(title || text, \"</a>\");\n}; // Helper function for markdown rendered marked\n// Decreases level of all headings by one, h1 -> h2\n\nexports.markedSetNofollowLinks = markedSetNofollowLinks;\nvar markedDecreaseHeadsLevel = function markedDecreaseHeadsLevel(text, level) {\n  level += 1;\n  return \"<h\".concat(level, \">\").concat(text, \"</h\").concat(level, \">\");\n};\n/**\n * Converts integer version number previously generated by buildNumberToInt() or versionNumberToInt()\n * to string in a form 'MAJOR.MINOR' or 'MAJOR.MINOR.BUILD' in case build number is non-zero.\n * @param int\n * @return {string}\n */\n\nexports.markedDecreaseHeadsLevel = markedDecreaseHeadsLevel;\nvar buildOrVersionNumberIntToStr = function buildOrVersionNumberIntToStr(int) {\n  if (typeof int !== 'number' || !(int >= 0)) return null;\n  var major = Math.floor(int / consts.VERSION_INT_MAJOR_BASE);\n  var remainder = int % consts.VERSION_INT_MAJOR_BASE;\n  var minor = Math.floor(remainder / consts.VERSION_INT_MINOR_BASE);\n  var build = remainder % consts.VERSION_INT_MINOR_BASE;\n  var str = \"\".concat(major, \".\").concat(minor);\n  if (build > 0) str += \".\".concat(build);\n  return str;\n}; // escaped variants for various strings\n\nexports.buildOrVersionNumberIntToStr = buildOrVersionNumberIntToStr;\nvar ESCAPE_DOT = \"\\uFF0E\"; // \".\"\n\nvar ESCAPE_DOLLAR = \"\\uFF04\"; // \"$\"\n\nvar ESCAPE_TO_BSON = \"\\uFF54\\uFF4F\\uFF22\\uFF33\\uFF2F\\uFF2E\"; // \"toBSON\"\n\nvar ESCAPE_BSON_TYPE = \"\\uFF3F\\uFF42\\uFF53\\uFF4F\\uFF4E\\uFF54\\uFF59\\uFF50\\uFF45\"; // \"_bsontype\"\n\nvar ESCAPE_NULL = ''; // \"\\0\" (null chars are removed completely, they won't be recovered)\n\nvar REGEXP_IS_ESCAPED = new RegExp(\"(\".concat(ESCAPE_DOT, \"|^\").concat(ESCAPE_DOLLAR, \"|^\").concat(ESCAPE_TO_BSON, \"$|^\").concat(ESCAPE_BSON_TYPE, \"$)\"));\nvar REGEXP_DOT = new RegExp(ESCAPE_DOT, 'g');\nvar REGEXP_DOLLAR = new RegExp(\"^\".concat(ESCAPE_DOLLAR));\nvar REGEXP_TO_BSON = new RegExp(\"^\".concat(ESCAPE_TO_BSON, \"$\"));\nvar REGEXP_BSON_TYPE = new RegExp(\"^\".concat(ESCAPE_BSON_TYPE, \"$\"));\n/**\n * If a property name is invalid for MongoDB or BSON, the function transforms\n * it to a valid form, which can be (most of the time) reversed back using unescapePropertyName().\n * For a detailed list of transformations, see escapeForBson().\n * @private\n */\n\nvar escapePropertyName = function escapePropertyName(name) {\n  // From MongoDB docs:\n  // \"Field names cannot contain dots (.) or null (\"\\0\") characters, and they must not start with\n  // a dollar sign (i.e. $). See faq-dollar-sign-escaping for an alternate approach.\"\n  // Moreover, the name cannot be \"toBSON\" and \"_bsontype\" because they have a special meaning in BSON serialization.\n  // Other special BSON properties like $id and $db are covered thanks to $ escape.\n  // pre-test to improve performance\n  if (/(\\.|^\\$|^toBSON$|^_bsontype$|\\0)/.test(name)) {\n    name = name.replace(/\\./g, ESCAPE_DOT);\n    name = name.replace(/^\\$/, ESCAPE_DOLLAR);\n    name = name.replace(/^toBSON$/, ESCAPE_TO_BSON);\n    name = name.replace(/^_bsontype$/, ESCAPE_BSON_TYPE);\n    name = name.replace(/\\0/g, ESCAPE_NULL);\n  }\n  return name;\n};\n/**\n * Reverses a string transformed using escapePropertyName() back to its original form.\n * Note that the reverse transformation might not be 100% correct for certain unlikely-to-occur strings\n * (e.g. string contain null chars).\n * @param key\n * @returns {*}\n * @private\n */\n\nexports.escapePropertyName = escapePropertyName;\nvar unescapePropertyName = function unescapePropertyName(name) {\n  // pre-test to improve performance\n  if (REGEXP_IS_ESCAPED.test(name)) {\n    name = name.replace(REGEXP_DOT, '.');\n    name = name.replace(REGEXP_DOLLAR, '$');\n    name = name.replace(REGEXP_TO_BSON, 'toBSON');\n    name = name.replace(REGEXP_BSON_TYPE, '_bsontype');\n  }\n  return name;\n};\n/**\n * Traverses an object, creates a deep clone if requested and transforms object keys and values using a provided function.\n * The `traverseObject` is recursive, hence if the input object has circular references, the function will run into\n * and infinite recursion and crash the Node.js process.\n * @param obj Object to traverse, it must not contain circular references!\n * @param clone If true, object is not modified but cloned.\n * @param transformFunc Function used to transform the property names na value.\n *  It has the following signature: `(key, value) => [key, value]`.\n *  Beware that the transformed value is only set if it !== old value.\n * @returns {*}\n * @private\n */\n\nexports.unescapePropertyName = unescapePropertyName;\nvar traverseObject = function traverseObject(obj, clone, transformFunc) {\n  // Primitive types don't need to be cloned or further traversed.\n  // Buffer needs to be skipped otherwise this will iterate over the whole buffer which kills the event loop.\n  if (obj === null || typeof obj !== 'object' || Object.prototype.toString.call(obj) === '[object Date]' || isBuffer(obj)) return obj;\n  var result;\n  if (Array.isArray(obj)) {\n    // obj is an array, keys are numbers and never need to be escaped\n    result = clone ? new Array(obj.length) : obj;\n    for (var i = 0; i < obj.length; i++) {\n      var val = traverseObject(obj[i], clone, transformFunc);\n      if (clone) result[i] = val;\n    }\n  } else {\n    // obj is an object, all keys need to be checked\n    result = clone ? {} : obj;\n    for (var key in obj) {\n      // eslint-disable-line no-restricted-syntax, guard-for-in\n      var _val = traverseObject(obj[key], clone, transformFunc);\n      var _transformFunc = transformFunc(key, _val),\n        _transformFunc2 = _slicedToArray(_transformFunc, 2),\n        transformedKey = _transformFunc2[0],\n        transformedVal = _transformFunc2[1];\n      if (key === transformedKey) {\n        // For better efficiency, skip setting the key-value if not cloning and nothing changed\n        if (clone || _val !== transformedVal) result[key] = transformedVal;\n      } else {\n        // Key has been renamed\n        result[transformedKey] = transformedVal;\n        if (!clone) delete obj[key];\n      }\n    }\n  }\n  return result;\n};\n/**\n * Transforms an object so that it can be stored to MongoDB or serialized to BSON.\n * It does so by transforming prohibited property names (e.g. names starting with \"$\",\n * containing \".\" or null char, equal to \"toBSON\" or \"_bsontype\") to equivalent full-width Unicode chars\n * which are normally allowed. To revert this transformation, use unescapeFromBson().\n * @param obj Object to be transformed. It must not contain circular references or any complex types (e.g. Maps, Promises etc.)!\n * @param clone If true, the function transforms a deep clone of the object rather than the original object.\n * @returns {*} Transformed object\n */\n\nexports.traverseObject = traverseObject;\nexports.escapeForBson = function (obj, clone) {\n  return traverseObject(obj, clone, function (key, value) {\n    return [escapePropertyName(key), value];\n  });\n};\n/**\n * Reverts a transformation of object property names performed by escapeForBson().\n * Note that the reverse transformation might not be 100% equal to the original object\n * for certain unlikely-to-occur property name (e.g. one contain null chars or full-width Unicode chars).\n * @param obj Object to be transformed. It must not contain circular references or any complex types (e.g. Maps, Promises etc.)!\n * @param clone If true, the function transforms a deep clone of the object rather than the original object.\n * @returns {*} Transformed object.\n */\n\nexports.unescapeFromBson = function (obj, clone) {\n  return traverseObject(obj, clone, function (key, value) {\n    return [unescapePropertyName(key), value];\n  });\n};\n/**\n * Determines whether an object contains property names that cannot be stored to MongoDB.\n * See escapeForBson() for more details.\n * Note that this function only works with objects that are serializable to JSON!\n * @param obj Object to be checked. It must not contain circular references or any complex types (e.g. Maps, Promises etc.)!\n * @returns {boolean} Returns true if object is invalid, otherwise it returns false.\n */\n\nexports.isBadForMongo = function (obj) {\n  var isBad = false;\n  try {\n    traverseObject(obj, false, function (key, value) {\n      var escapedKey = escapePropertyName(key);\n      if (key !== escapedKey) {\n        isBad = true;\n        throw new Error();\n      }\n      return [key, value];\n    });\n  } catch (e) {\n    if (!isBad) throw e;\n  }\n  return isBad;\n};\n/**\n * Validate's input field configured with proxy editor\n * @param {Object} fieldKey Proxy field value\n * @param {Object} value Proxy field value\n * @param {Boolean} isRequired Whether the field is required or not\n * @param {Object} options (Optional) Information about proxy groups availability\n * @param {Boolean} options.hasAutoProxyGroups Informs validation whether user has atleast one proxy group available in auto mode\n * @param {Array<String>} options.availableProxyGroups List of available proxy groups\n * @param {Object} options.disabledProxyGroups Object with groupId as key and error message as value (mostly for residential/SERP)\n */\n\nfunction validateProxyField(fieldKey, value) {\n  var isRequired = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var fieldErrors = [];\n  if (isRequired) {\n    // Nullable error is already handled by AJV\n    if (value === null) return fieldErrors;\n    if (!value) {\n      var message = m('inputSchema.validation.required', {\n        rootName: 'input',\n        fieldKey: fieldKey\n      });\n      fieldErrors.push(message);\n      return fieldErrors;\n    }\n    var _useApifyProxy = value.useApifyProxy,\n      _proxyUrls = value.proxyUrls;\n    if (!_useApifyProxy && (!Array.isArray(_proxyUrls) || _proxyUrls.length === 0)) {\n      fieldErrors.push(m('inputSchema.validation.proxyRequired', {\n        rootName: 'input',\n        fieldKey: fieldKey\n      }));\n      return fieldErrors;\n    }\n  } // Input is not required, so missing value is valid\n\n  if (!value) return fieldErrors;\n  var useApifyProxy = value.useApifyProxy,\n    proxyUrls = value.proxyUrls,\n    apifyProxyGroups = value.apifyProxyGroups,\n    apifyProxyCountry = value.apifyProxyCountry;\n  if (!useApifyProxy && Array.isArray(proxyUrls)) {\n    var invalidUrl = false;\n    proxyUrls.forEach(function (url) {\n      if (!regex.PROXY_URL_REGEX.test(url.trim())) invalidUrl = url.trim();\n    });\n    if (invalidUrl) {\n      fieldErrors.push(m('inputSchema.validation.customProxyInvalid', {\n        invalidUrl: invalidUrl\n      }));\n    }\n  } // Apify proxy country can be set only when using Apify proxy\n\n  if (!useApifyProxy && apifyProxyCountry) {\n    fieldErrors.push(m('inputSchema.validation.apifyProxyCountryWithoutApifyProxyForbidden'));\n  } // If Apify proxy is not used skip additional checks\n\n  if (!useApifyProxy) return fieldErrors; // If Apify proxy is used, check if there is a selected country and if so, check that it's valid (empty or a valid country code)\n\n  if (apifyProxyCountry && !countries[apifyProxyCountry]) {\n    fieldErrors.push(m('inputSchema.validation.apifyProxyCountryInvalid', {\n      invalidCountry: apifyProxyCountry\n    }));\n  } // If options are not provided skip additional checks\n\n  if (!options) return fieldErrors;\n  var selectedProxyGroups = apifyProxyGroups || []; // Auto mode, check that user has access to alteast one proxy group usable in this mode\n\n  if (!selectedProxyGroups.length && !options.hasAutoProxyGroups) {\n    fieldErrors.push(m('inputSchema.validation.noAvailableAutoProxy'));\n    return fieldErrors;\n  } // Check if proxy groups selected by user are available to him\n\n  var availableProxyGroupsById = {};\n  (options.availableProxyGroups || []).forEach(function (group) {\n    availableProxyGroupsById[group] = true;\n  });\n  var unavailableProxyGroups = selectedProxyGroups.filter(function (group) {\n    return !availableProxyGroupsById[group];\n  });\n  if (unavailableProxyGroups.length) {\n    fieldErrors.push(m('inputSchema.validation.proxyGroupsNotAvailable', {\n      rootName: 'input',\n      fieldKey: fieldKey,\n      groups: unavailableProxyGroups.join(', ')\n    }));\n  } // Check if any of the proxy groups are blocked and if yes then output the associated message\n\n  var blockedProxyGroupsById = options.disabledProxyGroups || {};\n  selectedProxyGroups.filter(function (group) {\n    return blockedProxyGroupsById[group];\n  }).forEach(function (blockedGroup) {\n    fieldErrors.push(blockedProxyGroupsById[blockedGroup]);\n  });\n  return fieldErrors;\n}\n/**\n * Uses AJV validator to validate input with input schema and then\n * does custom validation for our own properties (nullable, patternKey, patternValue)\n * @param {AJV.Validator} validator Initialized AJV validator\n * @param {Object} inputSchema Valid input schema in object\n * @param {Object} input Input object to be validated\n * @param {Object} options (Optional) Additional validation configuration for certain fields\n */\n\nexports.validateInputUsingValidator = function (validator, inputSchema, input) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var isValid = validator(input); // Check if input is valid based on schema values\n\n  var properties = inputSchema.properties;\n  var required = inputSchema.required || [];\n  var errors = []; // Process AJV validation errors\n\n  if (!isValid) {\n    errors = validator.errors.map(function (error) {\n      return parseAjvError(error, 'input', properties, input);\n    }).filter(function (error) {\n      return !!error;\n    });\n  }\n  Object.keys(properties).forEach(function (property) {\n    var value = input[property];\n    var _properties$property = properties[property],\n      type = _properties$property.type,\n      editor = _properties$property.editor,\n      patternKey = _properties$property.patternKey,\n      patternValue = _properties$property.patternValue;\n    var fieldErrors = []; // Check that proxy is required, if yes, valides that it's correctly setup\n\n    if (type === 'object' && editor === 'proxy') {\n      var proxyValidationErrors = validateProxyField(property, value, required.includes(property), options.proxy);\n      proxyValidationErrors.forEach(function (error) {\n        fieldErrors.push(error);\n      });\n    } // Check that array items fit patternKey and patternValue\n\n    if (type === 'array' && value && Array.isArray(value)) {\n      if (editor === 'requestListSources') {\n        var invalidIndexes = [];\n        value.forEach(function (item, index) {\n          if (!item) invalidIndexes.push(index);else if (!item.url && !item.requestsFromUrl) invalidIndexes.push(index);else if (item.url && !regex.URL_REGEX.test(item.url)) invalidIndexes.push(index);else if (item.requestsFromUrl && !regex.URL_REGEX.test(item.requestsFromUrl)) invalidIndexes.push(index);\n        });\n        if (invalidIndexes.length) {\n          fieldErrors.push(m('inputSchema.validation.requestListSourcesInvalid', {\n            rootName: 'input',\n            fieldKey: property,\n            invalidIndexes: invalidIndexes.join(',')\n          }));\n        }\n      } // If patternKey is provided, then validate keys of objects in array\n\n      if (patternKey && editor === 'keyValue') {\n        var check = new RegExp(patternKey);\n        var _invalidIndexes = [];\n        value.forEach(function (item, index) {\n          if (!check.test(item.key)) _invalidIndexes.push(index);\n        });\n        if (_invalidIndexes.length) {\n          fieldErrors.push(m('inputSchema.validation.arrayKeysInvalid', {\n            rootName: 'input',\n            fieldKey: property,\n            invalidIndexes: _invalidIndexes.join(','),\n            pattern: patternKey\n          }));\n        }\n      } // If patternValue is provided and editor is keyValue, then validate values of objecs in array\n\n      if (patternValue && editor === 'keyValue') {\n        var _check = new RegExp(patternValue);\n        var _invalidIndexes2 = [];\n        value.forEach(function (item, index) {\n          if (!_check.test(item.value)) _invalidIndexes2.push(index);\n        });\n        if (_invalidIndexes2.length) {\n          fieldErrors.push(m('inputSchema.validation.arrayValuesInvalid', {\n            rootName: 'input',\n            fieldKey: property,\n            invalidIndexes: _invalidIndexes2.join(','),\n            pattern: patternValue\n          }));\n        } // If patternValue is provided and editor is stringList, then validate each item in array\n      } else if (patternValue && editor === 'stringList') {\n        var _check2 = new RegExp(patternValue);\n        var _invalidIndexes3 = [];\n        value.forEach(function (item, index) {\n          if (!_check2.test(item)) _invalidIndexes3.push(index);\n        });\n        if (_invalidIndexes3.length) {\n          fieldErrors.push(m('inputSchema.validation.arrayValuesInvalid', {\n            rootName: 'input',\n            fieldKey: property,\n            invalidIndexes: _invalidIndexes3.join(','),\n            pattern: patternValue\n          }));\n        }\n      }\n    } // Check that object items fit patternKey and patternValue\n\n    if (type === 'object' && value) {\n      if (patternKey) {\n        var _check3 = new RegExp(patternKey);\n        var invalidKeys = [];\n        Object.keys(value).forEach(function (key) {\n          if (!_check3.test(key)) invalidKeys.push(key);\n        });\n        if (invalidKeys.length) {\n          fieldErrors.push(m('inputSchema.validation.objectKeysInvalid', {\n            rootName: 'input',\n            fieldKey: property,\n            invalidKeys: invalidKeys.join(','),\n            pattern: patternKey\n          }));\n        }\n      }\n      if (patternValue) {\n        var _check4 = new RegExp(patternValue);\n        var _invalidKeys = [];\n        Object.keys(value).forEach(function (key) {\n          var propertyValue = value[key];\n          if (typeof propertyValue !== 'string' || !_check4.test(propertyValue)) _invalidKeys.push(key);\n        });\n        if (_invalidKeys.length) {\n          fieldErrors.push(m('inputSchema.validation.objectValuesInvalid', {\n            rootName: 'input',\n            fieldKey: property,\n            invalidKeys: _invalidKeys.join(','),\n            pattern: patternValue\n          }));\n        }\n      }\n    }\n    if (fieldErrors.length > 0) {\n      var message = fieldErrors.join(', ');\n      errors.push({\n        fieldKey: property,\n        message: message\n      });\n    }\n  });\n  return errors;\n};\nexports.JsonVariable = /*#__PURE__*/function () {\n  function JsonVariable(name) {\n    _classCallCheck(this, JsonVariable);\n    this.name = name;\n  }\n  _createClass(JsonVariable, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return \"{{\".concat(this.name, \"}}\");\n    }\n  }]);\n  return JsonVariable;\n}();\n/**\n * Stringifies provided value to JSON with a difference that supports functions that\n * are stringified using .toString() method.\n *\n * In addition to that supports instances of JsonVariable('my.token') that are replaced\n * with a {{my.token}}.\n *\n * @param {*} value\n * @param {Function} [replacer]\n * @param {Number} [space=0]\n * @return {*} value stringified to JSON.\n */\n\nexports.jsonStringifyExtended = function (value, replacer, space) {\n  if (replacer && !_.isFunction(replacer)) throw new Error('Parameter \"replacer\" of jsonStringifyExtended() must be a function!');\n  var replacements = {};\n  var extendedReplacer = function extendedReplacer(key, val) {\n    val = replacer ? replacer(key, val) : val;\n    if (_.isFunction(val)) return val.toString();\n    if (val instanceof exports.JsonVariable) {\n      var randomToken = \"<<<REPLACEMENT_TOKEN::\".concat(Math.random(), \">>>\");\n      replacements[randomToken] = val.getToken();\n      return randomToken;\n    }\n    return val;\n  };\n  var stringifiedValue = JSON.stringify(value, extendedReplacer, space);\n  _.mapObject(replacements, function (replacementValue, replacementToken) {\n    stringifiedValue = stringifiedValue.replace(\"\\\"\".concat(replacementToken, \"\\\"\"), replacementValue);\n  });\n  return stringifiedValue;\n};\n/**\n * Splits a full name into the first name and last name, trimming all internal and external spaces.\n * Returns an array with two elements or null if splitting is not possible.\n * @param fullName\n */\n\nexports.splitFullName = function (fullName) {\n  if (typeof fullName !== 'string') return [null, null];\n  var names = (fullName || '').trim().split(' ');\n  var nonEmptyNames = _.filter(names, function (val) {\n    return !!val;\n  });\n  if (nonEmptyNames.length === 0) {\n    return [null, null];\n  }\n  if (nonEmptyNames.length === 1) {\n    return [null, nonEmptyNames[0]];\n  }\n  return [names[0], nonEmptyNames.slice(1).join(' ')];\n};","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","_slicedToArray","Object","defineProperty","exports","value","traverseObject","unescapePropertyName","escapePropertyName","buildOrVersionNumberIntToStr","markedDecreaseHeadsLevel","markedSetNofollowLinks","normalizeUrl","parseUrl","getOrdinalSuffix","truncate","dateToString","isNullOrUndefined","_","isBuffer","_require","countries","consts","regex","_require2","m","_require3","parseAjvError","obj","undefined","date","middleT","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","millis","getMilliseconds","concat","str","maxLength","suffix","length","Error","substr","num","s","v","o","strictMode","key","q","name","parser","strict","loose","exec","uri","i","replace","$0","$1","$2","fragmentKey","fragment","url","keepFragment","urlObj","trim","protocol","host","path","params","query","split","filter","param","test","sort","toLowerCase","join","href","title","text","urlParsed","URL","parse","e","isApifyLink","hostname","level","int","major","Math","floor","VERSION_INT_MAJOR_BASE","remainder","minor","VERSION_INT_MINOR_BASE","build","ESCAPE_DOT","ESCAPE_DOLLAR","ESCAPE_TO_BSON","ESCAPE_BSON_TYPE","ESCAPE_NULL","REGEXP_IS_ESCAPED","RegExp","REGEXP_DOT","REGEXP_DOLLAR","REGEXP_TO_BSON","REGEXP_BSON_TYPE","clone","transformFunc","prototype","toString","call","result","Array","isArray","val","_transformFunc","_transformFunc2","transformedKey","transformedVal","escapeForBson","unescapeFromBson","isBadForMongo","isBad","escapedKey","validateProxyField","fieldKey","isRequired","arguments","options","fieldErrors","message","rootName","push","useApifyProxy","proxyUrls","apifyProxyGroups","apifyProxyCountry","invalidUrl","forEach","PROXY_URL_REGEX","invalidCountry","selectedProxyGroups","hasAutoProxyGroups","availableProxyGroupsById","availableProxyGroups","group","unavailableProxyGroups","groups","blockedProxyGroupsById","disabledProxyGroups","blockedGroup","validateInputUsingValidator","validator","inputSchema","input","isValid","properties","required","errors","map","error","keys","property","_properties$property","type","editor","patternKey","patternValue","proxyValidationErrors","includes","proxy","invalidIndexes","item","index","requestsFromUrl","URL_REGEX","check","pattern","invalidKeys","propertyValue","JsonVariable","getToken","jsonStringifyExtended","replacer","space","isFunction","replacements","extendedReplacer","randomToken","random","stringifiedValue","JSON","stringify","mapObject","replacementValue","replacementToken","splitFullName","fullName","names","nonEmptyNames","slice"],"sources":["/project/remora/node_modules/apify-shared/utilities.client.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.traverseObject = exports.unescapePropertyName = exports.escapePropertyName = exports.buildOrVersionNumberIntToStr = exports.markedDecreaseHeadsLevel = exports.markedSetNofollowLinks = exports.normalizeUrl = exports.parseUrl = exports.getOrdinalSuffix = exports.truncate = exports.dateToString = exports.isNullOrUndefined = void 0;\n\n/*!\n * This module contains various client-side utility and helper functions.\n *\n * Author: Jan Curn (jan@apify.com)\n * Copyright(c) 2016 Apify. All rights reserved.\n *\n */\nconst _ = require('underscore');\n\nconst isBuffer = require('is-buffer');\n\nconst {\n  countries\n} = require('countries-list');\n\nconst consts = require('./consts');\n\nconst regex = require('./regexs');\n\nconst {\n  m\n} = require('./intl');\n\nconst {\n  parseAjvError\n} = require('./input_schema');\n\nrequire('./polyfills');\n/**\n * Returns true if object equals null or undefined, otherwise returns false.\n * @param obj\n * @returns {boolean}\n */\n\n\nconst isNullOrUndefined = function isNullOrUndefined(obj) {\n  return obj === undefined || obj === null;\n};\n/**\n * Converts Date object to ISO string.\n * @param date\n * @param middleT\n * @returns {*}\n */\n\n\nexports.isNullOrUndefined = isNullOrUndefined;\n\nconst dateToString = function dateToString(date, middleT) {\n  if (!(date instanceof Date)) {\n    return '';\n  }\n\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1; // January is 0, February is 1, and so on.\n\n  const day = date.getDate();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const millis = date.getMilliseconds();\n  return `${year}-${month < 10 ? `0${month}` : month}-${day < 10 ? `0${day}` : day}${middleT ? 'T' : ' '}${hours < 10 ? `0${hours}` : hours}:${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds}.${millis < 10 ? `00${millis}` : millis < 100 ? `0${millis}` : millis}`; // eslint-disable-line no-nested-ternary\n};\n/**\n * Ensures a string is shorter than a specified number of character, and truncates it if not,\n * appending a specific suffix to it.\n * @param str\n * @param maxLength\n * @param suffix Suffix to be appended to truncated string. If null or undefined, it defaults to \"...[truncated]\".\n */\n\n\nexports.dateToString = dateToString;\n\nconst truncate = function (str, maxLength, suffix) {\n  maxLength |= 0; // eslint-disable-line no-bitwise\n\n  if (typeof suffix !== 'string') {\n    suffix = '...[truncated]';\n  } // TODO: we should just ignore rest of the suffix...\n\n\n  if (suffix.length > maxLength) {\n    throw new Error('suffix string cannot be longer than maxLength');\n  }\n\n  if (typeof str === 'string' && str.length > maxLength) {\n    str = str.substr(0, maxLength - suffix.length) + suffix;\n  }\n\n  return str;\n};\n/**\n * Gets ordinal suffix for a number (e.g. \"nd\" for 2).\n */\n\n\nexports.truncate = truncate;\n\nconst getOrdinalSuffix = function (num) {\n  // code from https://ecommerce.shopify.com/c/ecommerce-design/t/ordinal-number-in-javascript-1st-2nd-3rd-4th-29259\n  const s = ['th', 'st', 'nd', 'rd'];\n  const v = num % 100;\n  return s[(v - 20) % 10] || s[v] || s[0];\n};\n\nexports.getOrdinalSuffix = getOrdinalSuffix;\n\nconst parseUrl = str => {\n  if (typeof str !== 'string') {\n    return {};\n  }\n\n  const o = {\n    strictMode: false,\n    key: ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'fragment'],\n    q: {\n      name: 'queryKey',\n      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n      strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n      // eslint-disable-line max-len,no-useless-escape\n      loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/ // eslint-disable-line max-len,no-useless-escape\n\n    }\n  };\n  const m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str); // eslint-disable-line no-shadow\n\n  const uri = {};\n  let i = o.key.length;\n\n  while (i--) uri[o.key[i]] = m[i] || '';\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, ($0, $1, $2) => {\n    if ($1) uri[o.q.name][$1] = $2;\n  }); // our extension - parse fragment using a query string format (i.e. \"#key1=val1&key2=val2\")\n  // this format is used by many websites\n\n  uri.fragmentKey = {};\n\n  if (uri.fragment) {\n    uri.fragment.replace(o.q.parser, ($0, $1, $2) => {\n      if ($1) uri.fragmentKey[$1] = $2;\n    });\n  }\n\n  return uri;\n};\n\nexports.parseUrl = parseUrl;\n\nconst normalizeUrl = (url, keepFragment) => {\n  if (typeof url !== 'string' || !url.length) {\n    return null;\n  }\n\n  const urlObj = parseUrl(url.trim());\n\n  if (!urlObj.protocol || !urlObj.host) {\n    return null;\n  }\n\n  const path = urlObj.path.replace(/\\/$/, '');\n  const params = urlObj.query ? urlObj.query.split('&').filter(param => {\n    return !/^utm_/.test(param);\n  }).sort() : [];\n  return `${urlObj.protocol.trim().toLowerCase()}://${urlObj.host.trim().toLowerCase()}${path.trim()}${params.length ? `?${params.join('&').trim()}` : ''}${keepFragment && urlObj.fragment ? `#${urlObj.fragment.trim()}` : ''}`;\n}; // Helper function for markdown rendered marked\n// Renders links outside apify.com in readme with rel=\"noopener noreferrer nofollow\" and target=\"_blank\" attributes\n\n\nexports.normalizeUrl = normalizeUrl;\n\nconst markedSetNofollowLinks = (href, title, text) => {\n  let urlParsed;\n\n  try {\n    urlParsed = URL.parse(href);\n  } catch (e) {// Probably invalid url, go on\n  }\n\n  const isApifyLink = urlParsed && /(\\.|^)apify\\.com$/i.test(urlParsed.hostname);\n  return isApifyLink ? `<a href=\"${href}\">${title || text}</a>` : `<a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"${href}\">${title || text}</a>`;\n}; // Helper function for markdown rendered marked\n// Decreases level of all headings by one, h1 -> h2\n\n\nexports.markedSetNofollowLinks = markedSetNofollowLinks;\n\nconst markedDecreaseHeadsLevel = (text, level) => {\n  level += 1;\n  return `<h${level}>${text}</h${level}>`;\n};\n/**\n * Converts integer version number previously generated by buildNumberToInt() or versionNumberToInt()\n * to string in a form 'MAJOR.MINOR' or 'MAJOR.MINOR.BUILD' in case build number is non-zero.\n * @param int\n * @return {string}\n */\n\n\nexports.markedDecreaseHeadsLevel = markedDecreaseHeadsLevel;\n\nconst buildOrVersionNumberIntToStr = int => {\n  if (typeof int !== 'number' || !(int >= 0)) return null;\n  const major = Math.floor(int / consts.VERSION_INT_MAJOR_BASE);\n  const remainder = int % consts.VERSION_INT_MAJOR_BASE;\n  const minor = Math.floor(remainder / consts.VERSION_INT_MINOR_BASE);\n  const build = remainder % consts.VERSION_INT_MINOR_BASE;\n  let str = `${major}.${minor}`;\n  if (build > 0) str += `.${build}`;\n  return str;\n}; // escaped variants for various strings\n\n\nexports.buildOrVersionNumberIntToStr = buildOrVersionNumberIntToStr;\nconst ESCAPE_DOT = '\\uFF0E'; // \".\"\n\nconst ESCAPE_DOLLAR = '\\uFF04'; // \"$\"\n\nconst ESCAPE_TO_BSON = '\\uFF54\\uFF4F\\uFF22\\uFF33\\uFF2F\\uFF2E'; // \"toBSON\"\n\nconst ESCAPE_BSON_TYPE = '\\uFF3F\\uFF42\\uFF53\\uFF4F\\uFF4E\\uFF54\\uFF59\\uFF50\\uFF45'; // \"_bsontype\"\n\nconst ESCAPE_NULL = ''; // \"\\0\" (null chars are removed completely, they won't be recovered)\n\nconst REGEXP_IS_ESCAPED = new RegExp(`(${ESCAPE_DOT}|^${ESCAPE_DOLLAR}|^${ESCAPE_TO_BSON}$|^${ESCAPE_BSON_TYPE}$)`);\nconst REGEXP_DOT = new RegExp(ESCAPE_DOT, 'g');\nconst REGEXP_DOLLAR = new RegExp(`^${ESCAPE_DOLLAR}`);\nconst REGEXP_TO_BSON = new RegExp(`^${ESCAPE_TO_BSON}$`);\nconst REGEXP_BSON_TYPE = new RegExp(`^${ESCAPE_BSON_TYPE}$`);\n/**\n * If a property name is invalid for MongoDB or BSON, the function transforms\n * it to a valid form, which can be (most of the time) reversed back using unescapePropertyName().\n * For a detailed list of transformations, see escapeForBson().\n * @private\n */\n\nconst escapePropertyName = name => {\n  // From MongoDB docs:\n  // \"Field names cannot contain dots (.) or null (\"\\0\") characters, and they must not start with\n  // a dollar sign (i.e. $). See faq-dollar-sign-escaping for an alternate approach.\"\n  // Moreover, the name cannot be \"toBSON\" and \"_bsontype\" because they have a special meaning in BSON serialization.\n  // Other special BSON properties like $id and $db are covered thanks to $ escape.\n  // pre-test to improve performance\n  if (/(\\.|^\\$|^toBSON$|^_bsontype$|\\0)/.test(name)) {\n    name = name.replace(/\\./g, ESCAPE_DOT);\n    name = name.replace(/^\\$/, ESCAPE_DOLLAR);\n    name = name.replace(/^toBSON$/, ESCAPE_TO_BSON);\n    name = name.replace(/^_bsontype$/, ESCAPE_BSON_TYPE);\n    name = name.replace(/\\0/g, ESCAPE_NULL);\n  }\n\n  return name;\n};\n/**\n * Reverses a string transformed using escapePropertyName() back to its original form.\n * Note that the reverse transformation might not be 100% correct for certain unlikely-to-occur strings\n * (e.g. string contain null chars).\n * @param key\n * @returns {*}\n * @private\n */\n\n\nexports.escapePropertyName = escapePropertyName;\n\nconst unescapePropertyName = function (name) {\n  // pre-test to improve performance\n  if (REGEXP_IS_ESCAPED.test(name)) {\n    name = name.replace(REGEXP_DOT, '.');\n    name = name.replace(REGEXP_DOLLAR, '$');\n    name = name.replace(REGEXP_TO_BSON, 'toBSON');\n    name = name.replace(REGEXP_BSON_TYPE, '_bsontype');\n  }\n\n  return name;\n};\n/**\n * Traverses an object, creates a deep clone if requested and transforms object keys and values using a provided function.\n * The `traverseObject` is recursive, hence if the input object has circular references, the function will run into\n * and infinite recursion and crash the Node.js process.\n * @param obj Object to traverse, it must not contain circular references!\n * @param clone If true, object is not modified but cloned.\n * @param transformFunc Function used to transform the property names na value.\n *  It has the following signature: `(key, value) => [key, value]`.\n *  Beware that the transformed value is only set if it !== old value.\n * @returns {*}\n * @private\n */\n\n\nexports.unescapePropertyName = unescapePropertyName;\n\nconst traverseObject = function (obj, clone, transformFunc) {\n  // Primitive types don't need to be cloned or further traversed.\n  // Buffer needs to be skipped otherwise this will iterate over the whole buffer which kills the event loop.\n  if (obj === null || typeof obj !== 'object' || Object.prototype.toString.call(obj) === '[object Date]' || isBuffer(obj)) return obj;\n  let result;\n\n  if (Array.isArray(obj)) {\n    // obj is an array, keys are numbers and never need to be escaped\n    result = clone ? new Array(obj.length) : obj;\n\n    for (let i = 0; i < obj.length; i++) {\n      const val = traverseObject(obj[i], clone, transformFunc);\n      if (clone) result[i] = val;\n    }\n  } else {\n    // obj is an object, all keys need to be checked\n    result = clone ? {} : obj;\n\n    for (const key in obj) {\n      // eslint-disable-line no-restricted-syntax, guard-for-in\n      const val = traverseObject(obj[key], clone, transformFunc);\n      const [transformedKey, transformedVal] = transformFunc(key, val);\n\n      if (key === transformedKey) {\n        // For better efficiency, skip setting the key-value if not cloning and nothing changed\n        if (clone || val !== transformedVal) result[key] = transformedVal;\n      } else {\n        // Key has been renamed\n        result[transformedKey] = transformedVal;\n        if (!clone) delete obj[key];\n      }\n    }\n  }\n\n  return result;\n};\n/**\n * Transforms an object so that it can be stored to MongoDB or serialized to BSON.\n * It does so by transforming prohibited property names (e.g. names starting with \"$\",\n * containing \".\" or null char, equal to \"toBSON\" or \"_bsontype\") to equivalent full-width Unicode chars\n * which are normally allowed. To revert this transformation, use unescapeFromBson().\n * @param obj Object to be transformed. It must not contain circular references or any complex types (e.g. Maps, Promises etc.)!\n * @param clone If true, the function transforms a deep clone of the object rather than the original object.\n * @returns {*} Transformed object\n */\n\n\nexports.traverseObject = traverseObject;\n\nexports.escapeForBson = function (obj, clone) {\n  return traverseObject(obj, clone, (key, value) => [escapePropertyName(key), value]);\n};\n/**\n * Reverts a transformation of object property names performed by escapeForBson().\n * Note that the reverse transformation might not be 100% equal to the original object\n * for certain unlikely-to-occur property name (e.g. one contain null chars or full-width Unicode chars).\n * @param obj Object to be transformed. It must not contain circular references or any complex types (e.g. Maps, Promises etc.)!\n * @param clone If true, the function transforms a deep clone of the object rather than the original object.\n * @returns {*} Transformed object.\n */\n\n\nexports.unescapeFromBson = function (obj, clone) {\n  return traverseObject(obj, clone, (key, value) => [unescapePropertyName(key), value]);\n};\n/**\n * Determines whether an object contains property names that cannot be stored to MongoDB.\n * See escapeForBson() for more details.\n * Note that this function only works with objects that are serializable to JSON!\n * @param obj Object to be checked. It must not contain circular references or any complex types (e.g. Maps, Promises etc.)!\n * @returns {boolean} Returns true if object is invalid, otherwise it returns false.\n */\n\n\nexports.isBadForMongo = function (obj) {\n  let isBad = false;\n\n  try {\n    traverseObject(obj, false, (key, value) => {\n      const escapedKey = escapePropertyName(key);\n\n      if (key !== escapedKey) {\n        isBad = true;\n        throw new Error();\n      }\n\n      return [key, value];\n    });\n  } catch (e) {\n    if (!isBad) throw e;\n  }\n\n  return isBad;\n};\n/**\n * Validate's input field configured with proxy editor\n * @param {Object} fieldKey Proxy field value\n * @param {Object} value Proxy field value\n * @param {Boolean} isRequired Whether the field is required or not\n * @param {Object} options (Optional) Information about proxy groups availability\n * @param {Boolean} options.hasAutoProxyGroups Informs validation whether user has atleast one proxy group available in auto mode\n * @param {Array<String>} options.availableProxyGroups List of available proxy groups\n * @param {Object} options.disabledProxyGroups Object with groupId as key and error message as value (mostly for residential/SERP)\n */\n\n\nfunction validateProxyField(fieldKey, value, isRequired = false, options = null) {\n  const fieldErrors = [];\n\n  if (isRequired) {\n    // Nullable error is already handled by AJV\n    if (value === null) return fieldErrors;\n\n    if (!value) {\n      const message = m('inputSchema.validation.required', {\n        rootName: 'input',\n        fieldKey\n      });\n      fieldErrors.push(message);\n      return fieldErrors;\n    }\n\n    const {\n      useApifyProxy,\n      proxyUrls\n    } = value;\n\n    if (!useApifyProxy && (!Array.isArray(proxyUrls) || proxyUrls.length === 0)) {\n      fieldErrors.push(m('inputSchema.validation.proxyRequired', {\n        rootName: 'input',\n        fieldKey\n      }));\n      return fieldErrors;\n    }\n  } // Input is not required, so missing value is valid\n\n\n  if (!value) return fieldErrors;\n  const {\n    useApifyProxy,\n    proxyUrls,\n    apifyProxyGroups,\n    apifyProxyCountry\n  } = value;\n\n  if (!useApifyProxy && Array.isArray(proxyUrls)) {\n    let invalidUrl = false;\n    proxyUrls.forEach(url => {\n      if (!regex.PROXY_URL_REGEX.test(url.trim())) invalidUrl = url.trim();\n    });\n\n    if (invalidUrl) {\n      fieldErrors.push(m('inputSchema.validation.customProxyInvalid', {\n        invalidUrl\n      }));\n    }\n  } // Apify proxy country can be set only when using Apify proxy\n\n\n  if (!useApifyProxy && apifyProxyCountry) {\n    fieldErrors.push(m('inputSchema.validation.apifyProxyCountryWithoutApifyProxyForbidden'));\n  } // If Apify proxy is not used skip additional checks\n\n\n  if (!useApifyProxy) return fieldErrors; // If Apify proxy is used, check if there is a selected country and if so, check that it's valid (empty or a valid country code)\n\n  if (apifyProxyCountry && !countries[apifyProxyCountry]) {\n    fieldErrors.push(m('inputSchema.validation.apifyProxyCountryInvalid', {\n      invalidCountry: apifyProxyCountry\n    }));\n  } // If options are not provided skip additional checks\n\n\n  if (!options) return fieldErrors;\n  const selectedProxyGroups = apifyProxyGroups || []; // Auto mode, check that user has access to alteast one proxy group usable in this mode\n\n  if (!selectedProxyGroups.length && !options.hasAutoProxyGroups) {\n    fieldErrors.push(m('inputSchema.validation.noAvailableAutoProxy'));\n    return fieldErrors;\n  } // Check if proxy groups selected by user are available to him\n\n\n  const availableProxyGroupsById = {};\n  (options.availableProxyGroups || []).forEach(group => {\n    availableProxyGroupsById[group] = true;\n  });\n  const unavailableProxyGroups = selectedProxyGroups.filter(group => !availableProxyGroupsById[group]);\n\n  if (unavailableProxyGroups.length) {\n    fieldErrors.push(m('inputSchema.validation.proxyGroupsNotAvailable', {\n      rootName: 'input',\n      fieldKey,\n      groups: unavailableProxyGroups.join(', ')\n    }));\n  } // Check if any of the proxy groups are blocked and if yes then output the associated message\n\n\n  const blockedProxyGroupsById = options.disabledProxyGroups || {};\n  selectedProxyGroups.filter(group => blockedProxyGroupsById[group]).forEach(blockedGroup => {\n    fieldErrors.push(blockedProxyGroupsById[blockedGroup]);\n  });\n  return fieldErrors;\n}\n/**\n * Uses AJV validator to validate input with input schema and then\n * does custom validation for our own properties (nullable, patternKey, patternValue)\n * @param {AJV.Validator} validator Initialized AJV validator\n * @param {Object} inputSchema Valid input schema in object\n * @param {Object} input Input object to be validated\n * @param {Object} options (Optional) Additional validation configuration for certain fields\n */\n\n\nexports.validateInputUsingValidator = function (validator, inputSchema, input, options = {}) {\n  const isValid = validator(input); // Check if input is valid based on schema values\n\n  const {\n    properties\n  } = inputSchema;\n  const required = inputSchema.required || [];\n  let errors = []; // Process AJV validation errors\n\n  if (!isValid) {\n    errors = validator.errors.map(error => parseAjvError(error, 'input', properties, input)).filter(error => !!error);\n  }\n\n  Object.keys(properties).forEach(property => {\n    const value = input[property];\n    const {\n      type,\n      editor,\n      patternKey,\n      patternValue\n    } = properties[property];\n    const fieldErrors = []; // Check that proxy is required, if yes, valides that it's correctly setup\n\n    if (type === 'object' && editor === 'proxy') {\n      const proxyValidationErrors = validateProxyField(property, value, required.includes(property), options.proxy);\n      proxyValidationErrors.forEach(error => {\n        fieldErrors.push(error);\n      });\n    } // Check that array items fit patternKey and patternValue\n\n\n    if (type === 'array' && value && Array.isArray(value)) {\n      if (editor === 'requestListSources') {\n        const invalidIndexes = [];\n        value.forEach((item, index) => {\n          if (!item) invalidIndexes.push(index);else if (!item.url && !item.requestsFromUrl) invalidIndexes.push(index);else if (item.url && !regex.URL_REGEX.test(item.url)) invalidIndexes.push(index);else if (item.requestsFromUrl && !regex.URL_REGEX.test(item.requestsFromUrl)) invalidIndexes.push(index);\n        });\n\n        if (invalidIndexes.length) {\n          fieldErrors.push(m('inputSchema.validation.requestListSourcesInvalid', {\n            rootName: 'input',\n            fieldKey: property,\n            invalidIndexes: invalidIndexes.join(',')\n          }));\n        }\n      } // If patternKey is provided, then validate keys of objects in array\n\n\n      if (patternKey && editor === 'keyValue') {\n        const check = new RegExp(patternKey);\n        const invalidIndexes = [];\n        value.forEach((item, index) => {\n          if (!check.test(item.key)) invalidIndexes.push(index);\n        });\n\n        if (invalidIndexes.length) {\n          fieldErrors.push(m('inputSchema.validation.arrayKeysInvalid', {\n            rootName: 'input',\n            fieldKey: property,\n            invalidIndexes: invalidIndexes.join(','),\n            pattern: patternKey\n          }));\n        }\n      } // If patternValue is provided and editor is keyValue, then validate values of objecs in array\n\n\n      if (patternValue && editor === 'keyValue') {\n        const check = new RegExp(patternValue);\n        const invalidIndexes = [];\n        value.forEach((item, index) => {\n          if (!check.test(item.value)) invalidIndexes.push(index);\n        });\n\n        if (invalidIndexes.length) {\n          fieldErrors.push(m('inputSchema.validation.arrayValuesInvalid', {\n            rootName: 'input',\n            fieldKey: property,\n            invalidIndexes: invalidIndexes.join(','),\n            pattern: patternValue\n          }));\n        } // If patternValue is provided and editor is stringList, then validate each item in array\n\n      } else if (patternValue && editor === 'stringList') {\n        const check = new RegExp(patternValue);\n        const invalidIndexes = [];\n        value.forEach((item, index) => {\n          if (!check.test(item)) invalidIndexes.push(index);\n        });\n\n        if (invalidIndexes.length) {\n          fieldErrors.push(m('inputSchema.validation.arrayValuesInvalid', {\n            rootName: 'input',\n            fieldKey: property,\n            invalidIndexes: invalidIndexes.join(','),\n            pattern: patternValue\n          }));\n        }\n      }\n    } // Check that object items fit patternKey and patternValue\n\n\n    if (type === 'object' && value) {\n      if (patternKey) {\n        const check = new RegExp(patternKey);\n        const invalidKeys = [];\n        Object.keys(value).forEach(key => {\n          if (!check.test(key)) invalidKeys.push(key);\n        });\n\n        if (invalidKeys.length) {\n          fieldErrors.push(m('inputSchema.validation.objectKeysInvalid', {\n            rootName: 'input',\n            fieldKey: property,\n            invalidKeys: invalidKeys.join(','),\n            pattern: patternKey\n          }));\n        }\n      }\n\n      if (patternValue) {\n        const check = new RegExp(patternValue);\n        const invalidKeys = [];\n        Object.keys(value).forEach(key => {\n          const propertyValue = value[key];\n          if (typeof propertyValue !== 'string' || !check.test(propertyValue)) invalidKeys.push(key);\n        });\n\n        if (invalidKeys.length) {\n          fieldErrors.push(m('inputSchema.validation.objectValuesInvalid', {\n            rootName: 'input',\n            fieldKey: property,\n            invalidKeys: invalidKeys.join(','),\n            pattern: patternValue\n          }));\n        }\n      }\n    }\n\n    if (fieldErrors.length > 0) {\n      const message = fieldErrors.join(', ');\n      errors.push({\n        fieldKey: property,\n        message\n      });\n    }\n  });\n  return errors;\n};\n\nexports.JsonVariable = class JsonVariable {\n  constructor(name) {\n    this.name = name;\n  }\n\n  getToken() {\n    return `{{${this.name}}}`;\n  }\n\n};\n/**\n * Stringifies provided value to JSON with a difference that supports functions that\n * are stringified using .toString() method.\n *\n * In addition to that supports instances of JsonVariable('my.token') that are replaced\n * with a {{my.token}}.\n *\n * @param {*} value\n * @param {Function} [replacer]\n * @param {Number} [space=0]\n * @return {*} value stringified to JSON.\n */\n\nexports.jsonStringifyExtended = (value, replacer, space) => {\n  if (replacer && !_.isFunction(replacer)) throw new Error('Parameter \"replacer\" of jsonStringifyExtended() must be a function!');\n  const replacements = {};\n\n  const extendedReplacer = (key, val) => {\n    val = replacer ? replacer(key, val) : val;\n    if (_.isFunction(val)) return val.toString();\n\n    if (val instanceof exports.JsonVariable) {\n      const randomToken = `<<<REPLACEMENT_TOKEN::${Math.random()}>>>`;\n      replacements[randomToken] = val.getToken();\n      return randomToken;\n    }\n\n    return val;\n  };\n\n  let stringifiedValue = JSON.stringify(value, extendedReplacer, space);\n\n  _.mapObject(replacements, (replacementValue, replacementToken) => {\n    stringifiedValue = stringifiedValue.replace(`\"${replacementToken}\"`, replacementValue);\n  });\n\n  return stringifiedValue;\n};\n/**\n * Splits a full name into the first name and last name, trimming all internal and external spaces.\n * Returns an array with two elements or null if splitting is not possible.\n * @param fullName\n */\n\n\nexports.splitFullName = function (fullName) {\n  if (typeof fullName !== 'string') return [null, null];\n  const names = (fullName || '').trim().split(' ');\n\n  const nonEmptyNames = _.filter(names, val => {\n    return !!val;\n  });\n\n  if (nonEmptyNames.length === 0) {\n    return [null, null];\n  }\n\n  if (nonEmptyNames.length === 1) {\n    return [null, nonEmptyNames[0]];\n  }\n\n  return [names[0], nonEmptyNames.slice(1).join(' ')];\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}