{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.not = void 0;\nvar random_id_1 = require(\"../utils/random-id\");\nvar predicate_1 = require(\"../predicates/predicate\");\n/**\nOperator which inverts the following validation.\n\n@hidden\n\n@param predictate - Predicate to wrap inside the operator.\n*/\nvar not = function not(predicate) {\n  var originalAddValidator = predicate.addValidator;\n  predicate.addValidator = function (validator) {\n    var fn = validator.validator,\n      message = validator.message,\n      negatedMessage = validator.negatedMessage;\n    var placeholder = random_id_1.default();\n    validator.message = function (value, label) {\n      return negatedMessage ? negatedMessage(value, label) : message(value, placeholder).replace(/ to /, '$&not ').replace(placeholder, label);\n    };\n    validator.validator = function (value) {\n      return !fn(value);\n    };\n    predicate[predicate_1.validatorSymbol].push(validator);\n    predicate.addValidator = originalAddValidator;\n    return predicate;\n  };\n  return predicate;\n};\nexports.not = not;","map":{"version":3,"names":["Object","defineProperty","exports","value","not","random_id_1","require","predicate_1","predicate","originalAddValidator","addValidator","validator","fn","message","negatedMessage","placeholder","default","label","replace","validatorSymbol","push"],"sources":["/project/remora/node_modules/ow/dist/operators/not.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.not = void 0;\nconst random_id_1 = require(\"../utils/random-id\");\nconst predicate_1 = require(\"../predicates/predicate\");\n/**\nOperator which inverts the following validation.\n\n@hidden\n\n@param predictate - Predicate to wrap inside the operator.\n*/\nconst not = (predicate) => {\n    const originalAddValidator = predicate.addValidator;\n    predicate.addValidator = (validator) => {\n        const { validator: fn, message, negatedMessage } = validator;\n        const placeholder = random_id_1.default();\n        validator.message = (value, label) => (negatedMessage ?\n            negatedMessage(value, label) :\n            message(value, placeholder).replace(/ to /, '$&not ').replace(placeholder, label));\n        validator.validator = (value) => !fn(value);\n        predicate[predicate_1.validatorSymbol].push(validator);\n        predicate.addValidator = originalAddValidator;\n        return predicate;\n    };\n    return predicate;\n};\nexports.not = not;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,GAAG,GAAG,KAAK,CAAC;AACpB,IAAMC,WAAW,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACjD,IAAMC,WAAW,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMF,GAAG,GAAG,SAANA,GAAGA,CAAII,SAAS,EAAK;EACvB,IAAMC,oBAAoB,GAAGD,SAAS,CAACE,YAAY;EACnDF,SAAS,CAACE,YAAY,GAAG,UAACC,SAAS,EAAK;IACpC,IAAmBC,EAAE,GAA8BD,SAAS,CAApDA,SAAS;MAAME,OAAO,GAAqBF,SAAS,CAArCE,OAAO;MAAEC,cAAc,GAAKH,SAAS,CAA5BG,cAAc;IAC9C,IAAMC,WAAW,GAAGV,WAAW,CAACW,OAAO,CAAC,CAAC;IACzCL,SAAS,CAACE,OAAO,GAAG,UAACV,KAAK,EAAEc,KAAK;MAAA,OAAMH,cAAc,GACjDA,cAAc,CAACX,KAAK,EAAEc,KAAK,CAAC,GAC5BJ,OAAO,CAACV,KAAK,EAAEY,WAAW,CAAC,CAACG,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAACA,OAAO,CAACH,WAAW,EAAEE,KAAK,CAAC;IAAA,CAAC;IACtFN,SAAS,CAACA,SAAS,GAAG,UAACR,KAAK;MAAA,OAAK,CAACS,EAAE,CAACT,KAAK,CAAC;IAAA;IAC3CK,SAAS,CAACD,WAAW,CAACY,eAAe,CAAC,CAACC,IAAI,CAACT,SAAS,CAAC;IACtDH,SAAS,CAACE,YAAY,GAAGD,oBAAoB;IAC7C,OAAOD,SAAS;EACpB,CAAC;EACD,OAAOA,SAAS;AACpB,CAAC;AACDN,OAAO,CAACE,GAAG,GAAGA,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}