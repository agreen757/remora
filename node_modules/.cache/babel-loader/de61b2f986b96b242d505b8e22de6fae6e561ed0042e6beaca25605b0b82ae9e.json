{"ast":null,"code":"var _regeneratorRuntime = require(\"/project/remora/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/project/remora/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _objectSpread = require(\"/project/remora/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/project/remora/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/project/remora/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/project/remora/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/project/remora/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar ResourceClient = require('../base/resource_client');\nvar _require = require('../utils'),\n  catchNotFoundOrThrow = _require.catchNotFoundOrThrow;\n\n/**\n * @hideconstructor\n */\nvar LogClient = /*#__PURE__*/function (_ResourceClient) {\n  \"use strict\";\n\n  _inherits(LogClient, _ResourceClient);\n  var _super = _createSuper(LogClient);\n  /**\n   * @param {ApiClientOptions} options\n   */\n  function LogClient(options) {\n    _classCallCheck(this, LogClient);\n    return _super.call(this, _objectSpread({\n      resourcePath: 'logs'\n    }, options));\n  }\n\n  /**\n   * https://docs.apify.com/api/v2#/reference/logs/log/get-log\n   * @return {Promise<?string>}\n   */\n  _createClass(LogClient, [{\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var requestOpts, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              requestOpts = {\n                url: this._url(),\n                method: 'GET',\n                params: this._params()\n              };\n              _context.prev = 1;\n              _context.next = 4;\n              return this.httpClient.call(requestOpts);\n            case 4:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.data);\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", catchNotFoundOrThrow(_context.t0));\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n      function get() {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n    /**\n     * Gets the log in a Readable stream format. Only works in Node.js.\n     * https://docs.apify.com/api/v2#/reference/logs/log/get-log\n     * @return {Promise<?Readable>}\n     */\n  }, {\n    key: \"stream\",\n    value: function () {\n      var _stream = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var params, requestOpts, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              params = {\n                stream: true\n              };\n              requestOpts = {\n                url: this._url(),\n                method: 'GET',\n                params: this._params(params),\n                responseType: 'stream'\n              };\n              _context2.prev = 2;\n              _context2.next = 5;\n              return this.httpClient.call(requestOpts);\n            case 5:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response.data);\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              return _context2.abrupt(\"return\", catchNotFoundOrThrow(_context2.t0));\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[2, 9]]);\n      }));\n      function stream() {\n        return _stream.apply(this, arguments);\n      }\n      return stream;\n    }()\n  }]);\n  return LogClient;\n}(ResourceClient);\nmodule.exports = LogClient;","map":{"version":3,"names":["ResourceClient","require","_require","catchNotFoundOrThrow","LogClient","_ResourceClient","_inherits","_super","_createSuper","options","_classCallCheck","call","_objectSpread","resourcePath","_createClass","key","value","_get","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestOpts","response","wrap","_callee$","_context","prev","next","url","_url","method","params","_params","httpClient","sent","abrupt","data","t0","stop","get","apply","arguments","_stream","_callee2","_callee2$","_context2","stream","responseType","module","exports"],"sources":["/project/remora/node_modules/apify-client/src/resource_clients/log.js"],"sourcesContent":["const ResourceClient = require('../base/resource_client');\nconst {\n    catchNotFoundOrThrow,\n} = require('../utils');\n\n/**\n * @hideconstructor\n */\nclass LogClient extends ResourceClient {\n    /**\n     * @param {ApiClientOptions} options\n     */\n    constructor(options) {\n        super({\n            resourcePath: 'logs',\n            ...options,\n        });\n    }\n\n    /**\n     * https://docs.apify.com/api/v2#/reference/logs/log/get-log\n     * @return {Promise<?string>}\n     */\n    async get() {\n        const requestOpts = {\n            url: this._url(),\n            method: 'GET',\n            params: this._params(),\n        };\n        try {\n            const response = await this.httpClient.call(requestOpts);\n            return response.data;\n        } catch (err) {\n            return catchNotFoundOrThrow(err);\n        }\n    }\n\n    /**\n     * Gets the log in a Readable stream format. Only works in Node.js.\n     * https://docs.apify.com/api/v2#/reference/logs/log/get-log\n     * @return {Promise<?Readable>}\n     */\n    async stream() {\n        const params = {\n            stream: true,\n        };\n\n        const requestOpts = {\n            url: this._url(),\n            method: 'GET',\n            params: this._params(params),\n            responseType: 'stream',\n        };\n\n        try {\n            const response = await this.httpClient.call(requestOpts);\n            return response.data;\n        } catch (err) {\n            return catchNotFoundOrThrow(err);\n        }\n    }\n}\n\nmodule.exports = LogClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}