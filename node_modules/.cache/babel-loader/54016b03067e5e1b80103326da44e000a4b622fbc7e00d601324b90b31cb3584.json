{"ast":null,"code":"var _classCallCheck = require(\"/project/remora/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/project/remora/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar ow = require('ow').default;\nvar Statistics = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Statistics() {\n    _classCallCheck(this, Statistics);\n    /**\n     * Number of Apify client function calls\n     * @type {number}\n     */\n    this.calls = 0;\n    /**\n     * Number of Apify API requests\n     * @type {number}\n     */\n    this.requests = 0;\n    /**\n     * Number of times the API returned 429 error. Errors on first attempt are\n     * counted at index 0. First retry error counts are on index 1 and so on.\n     * @type {number[]}\n     */\n    this.rateLimitErrors = [];\n  }\n  _createClass(Statistics, [{\n    key: \"addRateLimitError\",\n    value: function addRateLimitError(attempt) {\n      ow(attempt, ow.number.greaterThan(0));\n      // attempt is never 0,\n      // but we don't want index 0 empty\n      var index = attempt - 1;\n      this._fillBlanksWithZeroes(index);\n      this.rateLimitErrors[index]++;\n    }\n\n    /**\n     * Removes the necessity to pre-initialize array with correct\n     * number of zeroes by dynamically filling the empty indexes\n     * when necessary.\n     *\n     * @param inclusiveIndex\n     * @private\n     */\n  }, {\n    key: \"_fillBlanksWithZeroes\",\n    value: function _fillBlanksWithZeroes(inclusiveIndex) {\n      if (this.rateLimitErrors.length <= inclusiveIndex) {\n        for (var k = 0; k <= inclusiveIndex; k++) {\n          if (typeof this.rateLimitErrors[k] !== 'number') {\n            this.rateLimitErrors[k] = 0;\n          }\n        }\n      }\n    }\n  }]);\n  return Statistics;\n}();\nmodule.exports = Statistics;","map":{"version":3,"names":["ow","require","default","Statistics","_classCallCheck","calls","requests","rateLimitErrors","_createClass","key","value","addRateLimitError","attempt","number","greaterThan","index","_fillBlanksWithZeroes","inclusiveIndex","length","k","module","exports"],"sources":["/project/remora/node_modules/apify-client/src/statistics.js"],"sourcesContent":["const ow = require('ow').default;\n\nclass Statistics {\n    constructor() {\n        /**\n         * Number of Apify client function calls\n         * @type {number}\n         */\n        this.calls = 0;\n        /**\n         * Number of Apify API requests\n         * @type {number}\n         */\n        this.requests = 0;\n        /**\n         * Number of times the API returned 429 error. Errors on first attempt are\n         * counted at index 0. First retry error counts are on index 1 and so on.\n         * @type {number[]}\n         */\n        this.rateLimitErrors = [];\n    }\n\n    addRateLimitError(attempt) {\n        ow(attempt, ow.number.greaterThan(0));\n        // attempt is never 0,\n        // but we don't want index 0 empty\n        const index = attempt - 1;\n        this._fillBlanksWithZeroes(index);\n        this.rateLimitErrors[index]++;\n    }\n\n    /**\n     * Removes the necessity to pre-initialize array with correct\n     * number of zeroes by dynamically filling the empty indexes\n     * when necessary.\n     *\n     * @param inclusiveIndex\n     * @private\n     */\n    _fillBlanksWithZeroes(inclusiveIndex) {\n        if (this.rateLimitErrors.length <= inclusiveIndex) {\n            for (let k = 0; k <= inclusiveIndex; k++) {\n                if (typeof this.rateLimitErrors[k] !== 'number') {\n                    this.rateLimitErrors[k] = 0;\n                }\n            }\n        }\n    }\n}\n\nmodule.exports = Statistics;\n"],"mappings":";;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC,CAACC,OAAO;AAAC,IAE3BC,UAAU;EAAA;;EACZ,SAAAA,WAAA,EAAc;IAAAC,eAAA,OAAAD,UAAA;IACV;AACR;AACA;AACA;IACQ,IAAI,CAACE,KAAK,GAAG,CAAC;IACd;AACR;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,eAAe,GAAG,EAAE;EAC7B;EAACC,YAAA,CAAAL,UAAA;IAAAM,GAAA;IAAAC,KAAA,EAED,SAAAC,kBAAkBC,OAAO,EAAE;MACvBZ,EAAE,CAACY,OAAO,EAAEZ,EAAE,CAACa,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;MACrC;MACA;MACA,IAAMC,KAAK,GAAGH,OAAO,GAAG,CAAC;MACzB,IAAI,CAACI,qBAAqB,CAACD,KAAK,CAAC;MACjC,IAAI,CAACR,eAAe,CAACQ,KAAK,CAAC,EAAE;IACjC;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAPI;IAAAN,GAAA;IAAAC,KAAA,EAQA,SAAAM,sBAAsBC,cAAc,EAAE;MAClC,IAAI,IAAI,CAACV,eAAe,CAACW,MAAM,IAAID,cAAc,EAAE;QAC/C,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,cAAc,EAAEE,CAAC,EAAE,EAAE;UACtC,IAAI,OAAO,IAAI,CAACZ,eAAe,CAACY,CAAC,CAAC,KAAK,QAAQ,EAAE;YAC7C,IAAI,CAACZ,eAAe,CAACY,CAAC,CAAC,GAAG,CAAC;UAC/B;QACJ;MACJ;IACJ;EAAC;EAAA,OAAAhB,UAAA;AAAA;AAGLiB,MAAM,CAACC,OAAO,GAAGlB,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}