{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/project/remora/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _slicedToArray = require(\"/project/remora/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/project/remora/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/project/remora/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/project/remora/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnyPredicate = void 0;\nvar argument_error_1 = require(\"../argument-error\");\nvar base_predicate_1 = require(\"./base-predicate\");\nvar generate_argument_error_message_1 = require(\"../utils/generate-argument-error-message\");\n/**\n@hidden\n*/\nvar AnyPredicate = /*#__PURE__*/function (_base_predicate_1$tes) {\n  function AnyPredicate(predicates) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, AnyPredicate);\n    Object.defineProperty(this, \"predicates\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: predicates\n    });\n    Object.defineProperty(this, \"options\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: options\n    });\n  }\n  _createClass(AnyPredicate, [{\n    key: _base_predicate_1$tes,\n    value: function value(_value, main, label) {\n      var errors = new Map();\n      var _iterator = _createForOfIteratorHelper(this.predicates),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var predicate = _step.value;\n          try {\n            main(_value, label, predicate);\n            return;\n          } catch (error) {\n            if (_value === undefined && this.options.optional === true) {\n              return;\n            }\n            // If we received an ArgumentError, then..\n            if (error instanceof argument_error_1.ArgumentError) {\n              // Iterate through every error reported.\n              var _iterator2 = _createForOfIteratorHelper(error.validationErrors.entries()),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var _step2$value = _slicedToArray(_step2.value, 2),\n                    key = _step2$value[0],\n                    value = _step2$value[1];\n                  // Get the current errors set, if any.\n                  var alreadyPresent = errors.get(key);\n                  // Add all errors under the same key\n                  errors.set(key, new Set([].concat(_toConsumableArray(alreadyPresent !== null && alreadyPresent !== void 0 ? alreadyPresent : []), _toConsumableArray(value))));\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (errors.size > 0) {\n        // Generate the `error.message` property.\n        var message = generate_argument_error_message_1.generateArgumentErrorMessage(errors, true);\n        throw new argument_error_1.ArgumentError(\"Any predicate failed with the following errors:\\n\".concat(message), main, errors);\n      }\n    }\n  }]);\n  return AnyPredicate;\n}(base_predicate_1.testSymbol);\nexports.AnyPredicate = AnyPredicate;","map":{"version":3,"names":["_toConsumableArray","require","default","_slicedToArray","_createForOfIteratorHelper","_classCallCheck","_createClass","Object","defineProperty","exports","value","AnyPredicate","argument_error_1","base_predicate_1","generate_argument_error_message_1","_base_predicate_1$tes","predicates","options","arguments","length","undefined","enumerable","configurable","writable","key","main","label","errors","Map","_iterator","_step","s","n","done","predicate","error","optional","ArgumentError","_iterator2","validationErrors","entries","_step2","_step2$value","alreadyPresent","get","set","Set","concat","err","e","f","size","message","generateArgumentErrorMessage","testSymbol"],"sources":["/project/remora/node_modules/ow/dist/predicates/any.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnyPredicate = void 0;\nconst argument_error_1 = require(\"../argument-error\");\nconst base_predicate_1 = require(\"./base-predicate\");\nconst generate_argument_error_message_1 = require(\"../utils/generate-argument-error-message\");\n/**\n@hidden\n*/\nclass AnyPredicate {\n    constructor(predicates, options = {}) {\n        Object.defineProperty(this, \"predicates\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: predicates\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n    }\n    [base_predicate_1.testSymbol](value, main, label) {\n        const errors = new Map();\n        for (const predicate of this.predicates) {\n            try {\n                main(value, label, predicate);\n                return;\n            }\n            catch (error) {\n                if (value === undefined && this.options.optional === true) {\n                    return;\n                }\n                // If we received an ArgumentError, then..\n                if (error instanceof argument_error_1.ArgumentError) {\n                    // Iterate through every error reported.\n                    for (const [key, value] of error.validationErrors.entries()) {\n                        // Get the current errors set, if any.\n                        const alreadyPresent = errors.get(key);\n                        // Add all errors under the same key\n                        errors.set(key, new Set([...alreadyPresent !== null && alreadyPresent !== void 0 ? alreadyPresent : [], ...value]));\n                    }\n                }\n            }\n        }\n        if (errors.size > 0) {\n            // Generate the `error.message` property.\n            const message = generate_argument_error_message_1.generateArgumentErrorMessage(errors, true);\n            throw new argument_error_1.ArgumentError(`Any predicate failed with the following errors:\\n${message}`, main, errors);\n        }\n    }\n}\nexports.AnyPredicate = AnyPredicate;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}